ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB136:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include "stm32f4xx.h"
  26:Core/Src/main.c **** #include "core_cm4.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** #define MAX_ITER 100
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** //TODO: Define variables you think you might need
  48:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  49:Core/Src/main.c **** uint32_t start_time = 0;
  50:Core/Src/main.c **** uint32_t end_time = 0;
  51:Core/Src/main.c **** uint32_t execution_time = 0;
  52:Core/Src/main.c **** uint64_t checksum = 0;
  53:Core/Src/main.c **** uint32_t cpuCycle = 0;
  54:Core/Src/main.c **** uint64_t totalPixels = 0;
  55:Core/Src/main.c **** double executionSec = 0;
  56:Core/Src/main.c **** double throughput = 0;
  57:Core/Src/main.c **** int width = 0;
  58:Core/Src/main.c **** int height = 0;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** int widths[] = {512, 640, 800, 1280, 1920};
  61:Core/Src/main.c **** int heights[] = {512, 480, 600, 720, 1080};
  62:Core/Src/main.c **** uint32_t execTimes[5];
  63:Core/Src/main.c **** uint64_t checksums[5];
  64:Core/Src/main.c **** uint32_t cpuCycles[5];
  65:Core/Src/main.c **** double throughputs[5];
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PV */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  70:Core/Src/main.c **** void SystemClock_Config(void);
  71:Core/Src/main.c **** static void MX_GPIO_Init(void);
  72:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  73:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  74:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  75:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE END PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  80:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* USER CODE END 0 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /**
  85:Core/Src/main.c ****   * @brief  The application entry point.
  86:Core/Src/main.c ****   * @retval int
  87:Core/Src/main.c ****   */
  88:Core/Src/main.c **** int main(void)
  89:Core/Src/main.c **** {
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  98:Core/Src/main.c ****   HAL_Init();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END Init */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Configure the system clock */
 105:Core/Src/main.c ****   SystemClock_Config();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Initialize all configured peripherals */
 112:Core/Src/main.c ****   MX_GPIO_Init();
 113:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 114:Core/Src/main.c ****   CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 115:Core/Src/main.c ****   DWT->CYCCNT = 0;
 116:Core/Src/main.c ****   DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 117:Core/Src/main.c ****   /* USER CODE END 2 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Infinite loop */
 120:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 121:Core/Src/main.c ****   while (1)
 122:Core/Src/main.c ****   {
 123:Core/Src/main.c ****     /* USER CODE END WHILE */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** 	for (int i = 0; i < 5; i++) {
 128:Core/Src/main.c **** 		int width = widths[i];
 129:Core/Src/main.c **** 		int height = heights[i];
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** 		//TODO: Visual indicator: Turn on LED0 to signal processing start
 132:Core/Src/main.c **** 	    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** 		DWT->CYCCNT = 0;
 135:Core/Src/main.c **** 		//TODO: Record the start time
 136:Core/Src/main.c **** 		start_time = HAL_GetTick();
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** 		//TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initia
 139:Core/Src/main.c **** 		checksum = calculate_mandelbrot_fixed_point_arithmetic(width, height, MAX_ITER);
 140:Core/Src/main.c **** 		checksums[i] = checksum;
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** 	    //TODO: Record the end time
 143:Core/Src/main.c **** 		end_time = HAL_GetTick();
 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** 		cpuCycle = DWT->CYCCNT;
 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** 		cpuCycles[i] = cpuCycle;
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 4


 148:Core/Src/main.c **** 		//TODO: Calculate the execution time
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** 		execution_time = end_time - start_time;
 151:Core/Src/main.c **** 		execTimes[i] = execution_time;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** 		totalPixels = (uint64_t)width * height;
 154:Core/Src/main.c **** 		executionSec = (double)execution_time / 1000.0;
 155:Core/Src/main.c **** 		throughput = (double)totalPixels/executionSec;
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** 		throughputs[i] = throughput;
 158:Core/Src/main.c **** 		//TODO: Turn on LED 1 to signify the end of the operation
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** 		//TODO: Hold the LEDs on for a 2s delay
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** 		HAL_Delay(2000);
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** 		//TODO: Turn off the LEDs
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** 	}
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c ****   /* USER CODE END 3 */
 179:Core/Src/main.c **** }
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /**
 182:Core/Src/main.c ****   * @brief System Clock Configuration
 183:Core/Src/main.c ****   * @retval None
 184:Core/Src/main.c ****   */
 185:Core/Src/main.c **** void SystemClock_Config(void)
 186:Core/Src/main.c **** {
 187:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 188:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 193:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 196:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 199:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 5


 205:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 206:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 207:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 208:Core/Src/main.c ****   {
 209:Core/Src/main.c ****     Error_Handler();
 210:Core/Src/main.c ****   }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 213:Core/Src/main.c ****   */
 214:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 215:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 216:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 217:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 218:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 219:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 222:Core/Src/main.c ****   {
 223:Core/Src/main.c ****     Error_Handler();
 224:Core/Src/main.c ****   }
 225:Core/Src/main.c **** }
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** /**
 228:Core/Src/main.c ****   * @brief GPIO Initialization Function
 229:Core/Src/main.c ****   * @param None
 230:Core/Src/main.c ****   * @retval None
 231:Core/Src/main.c ****   */
 232:Core/Src/main.c **** static void MX_GPIO_Init(void)
 233:Core/Src/main.c **** {
  26              		.loc 1 233 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 234:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 234 3 view .LVU1
  40              		.loc 1 234 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0394     		str	r4, [sp, #12]
  43 0008 0494     		str	r4, [sp, #16]
  44 000a 0594     		str	r4, [sp, #20]
  45 000c 0694     		str	r4, [sp, #24]
  46 000e 0794     		str	r4, [sp, #28]
 235:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 240:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 6


  47              		.loc 1 240 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 240 3 view .LVU4
  50 0010 0094     		str	r4, [sp]
  51              		.loc 1 240 3 view .LVU5
  52 0012 184B     		ldr	r3, .L3
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 42F00402 		orr	r2, r2, #4
  55 001a 1A63     		str	r2, [r3, #48]
  56              		.loc 1 240 3 view .LVU6
  57 001c 1A6B     		ldr	r2, [r3, #48]
  58 001e 02F00402 		and	r2, r2, #4
  59 0022 0092     		str	r2, [sp]
  60              		.loc 1 240 3 view .LVU7
  61 0024 009A     		ldr	r2, [sp]
  62              	.LBE4:
  63              		.loc 1 240 3 view .LVU8
 241:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  64              		.loc 1 241 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 241 3 view .LVU10
  67 0026 0194     		str	r4, [sp, #4]
  68              		.loc 1 241 3 view .LVU11
  69 0028 1A6B     		ldr	r2, [r3, #48]
  70 002a 42F08002 		orr	r2, r2, #128
  71 002e 1A63     		str	r2, [r3, #48]
  72              		.loc 1 241 3 view .LVU12
  73 0030 1A6B     		ldr	r2, [r3, #48]
  74 0032 02F08002 		and	r2, r2, #128
  75 0036 0192     		str	r2, [sp, #4]
  76              		.loc 1 241 3 view .LVU13
  77 0038 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 241 3 view .LVU14
 242:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 242 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 242 3 view .LVU16
  83 003a 0294     		str	r4, [sp, #8]
  84              		.loc 1 242 3 view .LVU17
  85 003c 1A6B     		ldr	r2, [r3, #48]
  86 003e 42F00202 		orr	r2, r2, #2
  87 0042 1A63     		str	r2, [r3, #48]
  88              		.loc 1 242 3 view .LVU18
  89 0044 1B6B     		ldr	r3, [r3, #48]
  90 0046 03F00203 		and	r3, r3, #2
  91 004a 0293     		str	r3, [sp, #8]
  92              		.loc 1 242 3 view .LVU19
  93 004c 029B     		ldr	r3, [sp, #8]
  94              	.LBE6:
  95              		.loc 1 242 3 view .LVU20
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 245:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  96              		.loc 1 245 3 view .LVU21
  97 004e 0A4D     		ldr	r5, .L3+4
  98 0050 2246     		mov	r2, r4
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 7


  99 0052 FF21     		movs	r1, #255
 100 0054 2846     		mov	r0, r5
 101 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 102              	.LVL0:
 246:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 249:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 250:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 103              		.loc 1 250 3 view .LVU22
 104              		.loc 1 250 23 is_stmt 0 view .LVU23
 105 005a FF23     		movs	r3, #255
 106 005c 0393     		str	r3, [sp, #12]
 251:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 252:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 107              		.loc 1 252 3 is_stmt 1 view .LVU24
 108              		.loc 1 252 24 is_stmt 0 view .LVU25
 109 005e 0123     		movs	r3, #1
 110 0060 0493     		str	r3, [sp, #16]
 253:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 111              		.loc 1 253 3 is_stmt 1 view .LVU26
 112              		.loc 1 253 24 is_stmt 0 view .LVU27
 113 0062 0594     		str	r4, [sp, #20]
 254:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 114              		.loc 1 254 3 is_stmt 1 view .LVU28
 115              		.loc 1 254 25 is_stmt 0 view .LVU29
 116 0064 0694     		str	r4, [sp, #24]
 255:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 117              		.loc 1 255 3 is_stmt 1 view .LVU30
 118 0066 03A9     		add	r1, sp, #12
 119 0068 2846     		mov	r0, r5
 120 006a FFF7FEFF 		bl	HAL_GPIO_Init
 121              	.LVL1:
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 260:Core/Src/main.c **** }
 122              		.loc 1 260 1 is_stmt 0 view .LVU31
 123 006e 09B0     		add	sp, sp, #36
 124              	.LCFI2:
 125              		.cfi_def_cfa_offset 12
 126              		@ sp needed
 127 0070 30BD     		pop	{r4, r5, pc}
 128              	.L4:
 129 0072 00BF     		.align	2
 130              	.L3:
 131 0074 00380240 		.word	1073887232
 132 0078 00040240 		.word	1073873920
 133              		.cfi_endproc
 134              	.LFE136:
 136              		.global	__aeabi_i2d
 137              		.global	__aeabi_dmul
 138              		.global	__aeabi_ddiv
 139              		.global	__aeabi_dsub
 140              		.global	__aeabi_d2iz
 141              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 8


 142              		.align	1
 143              		.global	calculate_mandelbrot_fixed_point_arithmetic
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 148              	calculate_mandelbrot_fixed_point_arithmetic:
 149              	.LVL2:
 150              	.LFB137:
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 263:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 264:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 151              		.loc 1 264 96 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 8
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		.loc 1 264 96 is_stmt 0 view .LVU33
 156 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 157              	.LCFI3:
 158              		.cfi_def_cfa_offset 36
 159              		.cfi_offset 4, -36
 160              		.cfi_offset 5, -32
 161              		.cfi_offset 6, -28
 162              		.cfi_offset 7, -24
 163              		.cfi_offset 8, -20
 164              		.cfi_offset 9, -16
 165              		.cfi_offset 10, -12
 166              		.cfi_offset 11, -8
 167              		.cfi_offset 14, -4
 168 0004 83B0     		sub	sp, sp, #12
 169              	.LCFI4:
 170              		.cfi_def_cfa_offset 48
 171 0006 8246     		mov	r10, r0
 172 0008 8846     		mov	r8, r1
 173 000a 1446     		mov	r4, r2
 265:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 174              		.loc 1 265 3 is_stmt 1 view .LVU34
 175              	.LVL3:
 266:Core/Src/main.c ****     //TODO: Complete the function implementation
 267:Core/Src/main.c ****     int x0, xi;
 176              		.loc 1 267 5 view .LVU35
 268:Core/Src/main.c ****     int y0, yi;
 177              		.loc 1 268 5 view .LVU36
 269:Core/Src/main.c ****     int temp;
 178              		.loc 1 269 5 view .LVU37
 270:Core/Src/main.c ****     int iterations;
 179              		.loc 1 270 5 view .LVU38
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** 	#define FixedShift 12
 273:Core/Src/main.c **** 	#define fixed_1 (1 << FixedShift)
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 180              		.loc 1 275 5 view .LVU39
 181              	.LBB7:
 182              		.loc 1 275 10 view .LVU40
 183              		.loc 1 275 14 is_stmt 0 view .LVU41
 184 000c 4FF00009 		mov	r9, #0
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 9


 185              	.LBE7:
 265:Core/Src/main.c ****     //TODO: Complete the function implementation
 186              		.loc 1 265 12 view .LVU42
 187 0010 4E46     		mov	r6, r9
 188 0012 CB46     		mov	fp, r9
 189              	.LBB10:
 190              		.loc 1 275 5 view .LVU43
 191 0014 42E0     		b	.L6
 192              	.LVL4:
 193              	.L10:
 194              	.LBB8:
 276:Core/Src/main.c ****     	y0 = ((y * (2 * fixed_1)) / height) - (fixed_1 * 1);
 277:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 278:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****     		xi = 0;
 282:Core/Src/main.c ****     		yi = 0;
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****     		iterations = 0;
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****     		while ((iterations < max_iterations) && (((xi * xi) >> FixedShift) + ((yi * yi) >> FixedShift
 287:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 195              		.loc 1 287 8 is_stmt 1 view .LVU44
 196              		.loc 1 287 41 is_stmt 0 view .LVU45
 197 0016 A8EB0202 		sub	r2, r8, r2
 198              	.LVL5:
 288:Core/Src/main.c ****     			yi = (((2 * xi * yi) >> FixedShift) + y0);
 199              		.loc 1 288 8 is_stmt 1 view .LVU46
 200              		.loc 1 288 23 is_stmt 0 view .LVU47
 201 001a 0CFB03F3 		mul	r3, ip, r3
 202              	.LVL6:
 203              		.loc 1 288 29 view .LVU48
 204 001e 43F3D323 		sbfx	r3, r3, #11, #20
 205              		.loc 1 288 11 view .LVU49
 206 0022 03EB050C 		add	ip, r3, r5
 207              	.LVL7:
 289:Core/Src/main.c ****     			xi = temp;
 208              		.loc 1 289 8 is_stmt 1 view .LVU50
 290:Core/Src/main.c ****     			iterations++;
 209              		.loc 1 290 8 view .LVU51
 210              		.loc 1 290 18 is_stmt 0 view .LVU52
 211 0026 0EF1010E 		add	lr, lr, #1
 212              	.LVL8:
 289:Core/Src/main.c ****     			xi = temp;
 213              		.loc 1 289 11 view .LVU53
 214 002a 1318     		adds	r3, r2, r0
 215              	.LVL9:
 216              	.L8:
 286:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 217              		.loc 1 286 44 is_stmt 1 view .LVU54
 218 002c A645     		cmp	lr, r4
 219 002e 0BDA     		bge	.L9
 286:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 220              		.loc 1 286 53 is_stmt 0 discriminator 1 view .LVU55
 221 0030 03FB03F1 		mul	r1, r3, r3
 286:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 10


 222              		.loc 1 286 59 discriminator 1 view .LVU56
 223 0034 4FEA2138 		asr	r8, r1, #12
 286:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 224              		.loc 1 286 81 discriminator 1 view .LVU57
 225 0038 0CFB0CF2 		mul	r2, ip, ip
 286:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 226              		.loc 1 286 87 discriminator 1 view .LVU58
 227 003c 1213     		asrs	r2, r2, #12
 286:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 228              		.loc 1 286 74 discriminator 1 view .LVU59
 229 003e 02EB2131 		add	r1, r2, r1, asr #12
 286:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 230              		.loc 1 286 44 discriminator 1 view .LVU60
 231 0042 B1F5804F 		cmp	r1, #16384
 232 0046 E6DB     		blt	.L10
 233              	.L9:
 291:Core/Src/main.c ****     		}
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****     		mandelbrot_sum += iterations;
 234              		.loc 1 293 7 is_stmt 1 view .LVU61
 235              		.loc 1 293 22 is_stmt 0 view .LVU62
 236 0048 1EEB0606 		adds	r6, lr, r6
 237              	.LVL10:
 238              		.loc 1 293 22 view .LVU63
 239 004c 4BEBEE7B 		adc	fp, fp, lr, asr #31
 240              	.LVL11:
 277:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 241              		.loc 1 277 34 is_stmt 1 discriminator 2 view .LVU64
 242 0050 0137     		adds	r7, r7, #1
 243              	.LVL12:
 244              	.L7:
 277:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 245              		.loc 1 277 24 discriminator 1 view .LVU65
 246 0052 5745     		cmp	r7, r10
 247 0054 1CDA     		bge	.L14
 278:Core/Src/main.c **** 
 248              		.loc 1 278 7 view .LVU66
 278:Core/Src/main.c **** 
 249              		.loc 1 278 16 is_stmt 0 view .LVU67
 250 0056 3846     		mov	r0, r7
 251 0058 FFF7FEFF 		bl	__aeabi_i2d
 252              	.LVL13:
 253 005c 0022     		movs	r2, #0
 254 005e 194B     		ldr	r3, .L16
 255 0060 FFF7FEFF 		bl	__aeabi_dmul
 256              	.LVL14:
 257 0064 8046     		mov	r8, r0
 258 0066 8946     		mov	r9, r1
 278:Core/Src/main.c **** 
 259              		.loc 1 278 35 view .LVU68
 260 0068 5046     		mov	r0, r10
 261 006a FFF7FEFF 		bl	__aeabi_i2d
 262              	.LVL15:
 263 006e 0246     		mov	r2, r0
 264 0070 0B46     		mov	r3, r1
 265 0072 4046     		mov	r0, r8
 266 0074 4946     		mov	r1, r9
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 11


 267 0076 FFF7FEFF 		bl	__aeabi_ddiv
 268              	.LVL16:
 278:Core/Src/main.c **** 
 269              		.loc 1 278 44 view .LVU69
 270 007a 0022     		movs	r2, #0
 271 007c 124B     		ldr	r3, .L16+4
 272 007e FFF7FEFF 		bl	__aeabi_dsub
 273              	.LVL17:
 278:Core/Src/main.c **** 
 274              		.loc 1 278 10 view .LVU70
 275 0082 FFF7FEFF 		bl	__aeabi_d2iz
 276              	.LVL18:
 281:Core/Src/main.c ****     		yi = 0;
 277              		.loc 1 281 7 is_stmt 1 view .LVU71
 282:Core/Src/main.c **** 
 278              		.loc 1 282 7 view .LVU72
 284:Core/Src/main.c **** 
 279              		.loc 1 284 7 view .LVU73
 286:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 280              		.loc 1 286 7 view .LVU74
 284:Core/Src/main.c **** 
 281              		.loc 1 284 18 is_stmt 0 view .LVU75
 282 0086 4FF0000E 		mov	lr, #0
 282:Core/Src/main.c **** 
 283              		.loc 1 282 10 view .LVU76
 284 008a F446     		mov	ip, lr
 281:Core/Src/main.c ****     		yi = 0;
 285              		.loc 1 281 10 view .LVU77
 286 008c 7346     		mov	r3, lr
 286:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 287              		.loc 1 286 13 view .LVU78
 288 008e CDE7     		b	.L8
 289              	.LVL19:
 290              	.L14:
 286:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 291              		.loc 1 286 13 view .LVU79
 292              	.LBE8:
 275:Core/Src/main.c ****     	y0 = ((y * (2 * fixed_1)) / height) - (fixed_1 * 1);
 293              		.loc 1 275 34 discriminator 2 view .LVU80
 294 0090 DDF80090 		ldr	r9, [sp]
 295 0094 DDF80480 		ldr	r8, [sp, #4]
 275:Core/Src/main.c ****     	y0 = ((y * (2 * fixed_1)) / height) - (fixed_1 * 1);
 296              		.loc 1 275 34 is_stmt 1 discriminator 2 view .LVU81
 297 0098 09F10109 		add	r9, r9, #1
 298              	.LVL20:
 299              	.L6:
 275:Core/Src/main.c ****     	y0 = ((y * (2 * fixed_1)) / height) - (fixed_1 * 1);
 300              		.loc 1 275 23 discriminator 1 view .LVU82
 301 009c C145     		cmp	r9, r8
 302 009e 0BDA     		bge	.L15
 276:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 303              		.loc 1 276 6 view .LVU83
 276:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 304              		.loc 1 276 15 is_stmt 0 view .LVU84
 305 00a0 4FEA4935 		lsl	r5, r9, #13
 276:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 306              		.loc 1 276 32 view .LVU85
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 12


 307 00a4 95FBF8F5 		sdiv	r5, r5, r8
 276:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 308              		.loc 1 276 9 view .LVU86
 309 00a8 A5F58055 		sub	r5, r5, #4096
 310              	.LVL21:
 277:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 311              		.loc 1 277 6 is_stmt 1 view .LVU87
 312              	.LBB9:
 277:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 313              		.loc 1 277 11 view .LVU88
 277:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 314              		.loc 1 277 15 is_stmt 0 view .LVU89
 315 00ac 0027     		movs	r7, #0
 316 00ae CDF80090 		str	r9, [sp]
 317 00b2 CDF80480 		str	r8, [sp, #4]
 277:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 318              		.loc 1 277 6 view .LVU90
 319 00b6 CCE7     		b	.L7
 320              	.LVL22:
 321              	.L15:
 277:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 322              		.loc 1 277 6 view .LVU91
 323              	.LBE9:
 324              	.LBE10:
 294:Core/Src/main.c ****     	}
 295:Core/Src/main.c ****     }
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****     return mandelbrot_sum;
 325              		.loc 1 297 5 is_stmt 1 view .LVU92
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** }
 326              		.loc 1 299 1 is_stmt 0 view .LVU93
 327 00b8 3046     		mov	r0, r6
 328 00ba 5946     		mov	r1, fp
 329 00bc 03B0     		add	sp, sp, #12
 330              	.LCFI5:
 331              		.cfi_def_cfa_offset 36
 332              		@ sp needed
 333 00be BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 334              	.LVL23:
 335              	.L17:
 336              		.loc 1 299 1 view .LVU94
 337 00c2 00BF     		.align	2
 338              	.L16:
 339 00c4 0000CC40 		.word	1087111168
 340 00c8 0000C440 		.word	1086586880
 341              		.cfi_endproc
 342              	.LFE137:
 344              		.global	__aeabi_dadd
 345              		.global	__aeabi_dcmplt
 346              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 347              		.align	1
 348              		.global	calculate_mandelbrot_double
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 353              	calculate_mandelbrot_double:
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 13


 354              	.LVL24:
 355              	.LFB138:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 302:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 356              		.loc 1 302 80 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 56
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              		.loc 1 302 80 is_stmt 0 view .LVU96
 361 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 362              	.LCFI6:
 363              		.cfi_def_cfa_offset 36
 364              		.cfi_offset 4, -36
 365              		.cfi_offset 5, -32
 366              		.cfi_offset 6, -28
 367              		.cfi_offset 7, -24
 368              		.cfi_offset 8, -20
 369              		.cfi_offset 9, -16
 370              		.cfi_offset 10, -12
 371              		.cfi_offset 11, -8
 372              		.cfi_offset 14, -4
 373 0004 8FB0     		sub	sp, sp, #60
 374              	.LCFI7:
 375              		.cfi_def_cfa_offset 96
 376 0006 0890     		str	r0, [sp, #32]
 303:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 377              		.loc 1 303 5 is_stmt 1 view .LVU97
 378              	.LVL25:
 304:Core/Src/main.c ****     //TODO: Complete the function implementation
 305:Core/Src/main.c ****     double x0, xi;
 379              		.loc 1 305 5 view .LVU98
 306:Core/Src/main.c ****     double y0, yi;
 380              		.loc 1 306 5 view .LVU99
 307:Core/Src/main.c ****     double temp;
 381              		.loc 1 307 5 view .LVU100
 308:Core/Src/main.c ****     int iterations;
 382              		.loc 1 308 5 view .LVU101
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 383              		.loc 1 310 5 view .LVU102
 384              	.LBB11:
 385              		.loc 1 310 10 view .LVU103
 386              		.loc 1 310 14 is_stmt 0 view .LVU104
 387 0008 4FF0000C 		mov	ip, #0
 388              	.LBE11:
 303:Core/Src/main.c ****     //TODO: Complete the function implementation
 389              		.loc 1 303 14 view .LVU105
 390 000c CDF824C0 		str	ip, [sp, #36]
 391 0010 0C91     		str	r1, [sp, #48]
 392 0012 E346     		mov	fp, ip
 393 0014 0D92     		str	r2, [sp, #52]
 394 0016 CDF828C0 		str	ip, [sp, #40]
 395              	.LBB14:
 396              		.loc 1 310 5 view .LVU106
 397 001a 85E0     		b	.L19
 398              	.LVL26:
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 14


 399              	.L22:
 400              	.LBB12:
 311:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 312:Core/Src/main.c ****     		x0 = ((x / (double)width) * 3.5) - 2.5;
 313:Core/Src/main.c ****        		y0 = ((y / (double)height) * 2.0) - 1.0;
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****        		xi = 0.0;
 316:Core/Src/main.c ****        		yi = 0.0;
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****        		iterations = 0;
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****        		while ((iterations < max_iterations) && ((xi * xi + yi * yi) < 4.0)) {
 321:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 401              		.loc 1 321 11 is_stmt 1 view .LVU107
 402              		.loc 1 321 16 is_stmt 0 view .LVU108
 403 001c 4246     		mov	r2, r8
 404 001e 4B46     		mov	r3, r9
 405 0020 DDE90001 		ldrd	r0, [sp]
 406 0024 FFF7FEFF 		bl	__aeabi_dsub
 407              	.LVL27:
 408 0028 8046     		mov	r8, r0
 409 002a 8946     		mov	r9, r1
 410              	.LVL28:
 322:Core/Src/main.c ****        			yi = (2.0* xi * yi) + y0;
 411              		.loc 1 322 11 is_stmt 1 view .LVU109
 412              		.loc 1 322 20 is_stmt 0 view .LVU110
 413 002c 2246     		mov	r2, r4
 414 002e 2B46     		mov	r3, r5
 415 0030 2046     		mov	r0, r4
 416 0032 2946     		mov	r1, r5
 417 0034 FFF7FEFF 		bl	__aeabi_dadd
 418              	.LVL29:
 419              		.loc 1 322 25 view .LVU111
 420 0038 5246     		mov	r2, r10
 421 003a 5B46     		mov	r3, fp
 422 003c FFF7FEFF 		bl	__aeabi_dmul
 423              	.LVL30:
 424              		.loc 1 322 14 view .LVU112
 425 0040 DDE90423 		ldrd	r2, [sp, #16]
 426 0044 FFF7FEFF 		bl	__aeabi_dadd
 427              	.LVL31:
 428 0048 8246     		mov	r10, r0
 429              	.LVL32:
 430              		.loc 1 322 14 view .LVU113
 431 004a 8B46     		mov	fp, r1
 432              	.LVL33:
 323:Core/Src/main.c ****        			xi = temp + x0;
 433              		.loc 1 323 11 is_stmt 1 view .LVU114
 434              		.loc 1 323 14 is_stmt 0 view .LVU115
 435 004c 4246     		mov	r2, r8
 436 004e 4B46     		mov	r3, r9
 437 0050 DDE90201 		ldrd	r0, [sp, #8]
 438 0054 FFF7FEFF 		bl	__aeabi_dadd
 439              	.LVL34:
 440 0058 0446     		mov	r4, r0
 441              	.LVL35:
 442              		.loc 1 323 14 view .LVU116
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 15


 443 005a 0D46     		mov	r5, r1
 444              	.LVL36:
 324:Core/Src/main.c ****        			iterations++;
 445              		.loc 1 324 11 is_stmt 1 view .LVU117
 446              		.loc 1 324 21 is_stmt 0 view .LVU118
 447 005c 0136     		adds	r6, r6, #1
 448              	.LVL37:
 449              	.L20:
 320:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 450              		.loc 1 320 47 is_stmt 1 view .LVU119
 451 005e BE42     		cmp	r6, r7
 452 0060 1BDA     		bge	.L21
 320:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 453              		.loc 1 320 55 is_stmt 0 discriminator 1 view .LVU120
 454 0062 2246     		mov	r2, r4
 455 0064 2B46     		mov	r3, r5
 456 0066 2046     		mov	r0, r4
 457 0068 2946     		mov	r1, r5
 458 006a FFF7FEFF 		bl	__aeabi_dmul
 459              	.LVL38:
 460 006e CDE90001 		strd	r0, [sp]
 320:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 461              		.loc 1 320 65 discriminator 1 view .LVU121
 462 0072 5246     		mov	r2, r10
 463 0074 5B46     		mov	r3, fp
 464 0076 5046     		mov	r0, r10
 465 0078 5946     		mov	r1, fp
 466 007a FFF7FEFF 		bl	__aeabi_dmul
 467              	.LVL39:
 468 007e 8046     		mov	r8, r0
 469 0080 8946     		mov	r9, r1
 320:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 470              		.loc 1 320 60 discriminator 1 view .LVU122
 471 0082 0246     		mov	r2, r0
 472 0084 0B46     		mov	r3, r1
 473 0086 DDE90001 		ldrd	r0, [sp]
 474 008a FFF7FEFF 		bl	__aeabi_dadd
 475              	.LVL40:
 320:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 476              		.loc 1 320 47 discriminator 1 view .LVU123
 477 008e 0022     		movs	r2, #0
 478 0090 2D4B     		ldr	r3, .L29
 479 0092 FFF7FEFF 		bl	__aeabi_dcmplt
 480              	.LVL41:
 481 0096 0028     		cmp	r0, #0
 482 0098 C0D1     		bne	.L22
 483              	.L21:
 325:Core/Src/main.c ****        		}
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****        		mandelbrot_sum +=iterations;
 484              		.loc 1 327 10 is_stmt 1 view .LVU124
 485              		.loc 1 327 25 is_stmt 0 view .LVU125
 486 009a 0A9B     		ldr	r3, [sp, #40]
 487 009c F218     		adds	r2, r6, r3
 488 009e 0A92     		str	r2, [sp, #40]
 489              	.LVL42:
 490              		.loc 1 327 25 view .LVU126
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 16


 491 00a0 099B     		ldr	r3, [sp, #36]
 492 00a2 43EBE673 		adc	r3, r3, r6, asr #31
 493 00a6 0993     		str	r3, [sp, #36]
 494              	.LVL43:
 311:Core/Src/main.c ****     		x0 = ((x / (double)width) * 3.5) - 2.5;
 495              		.loc 1 311 34 is_stmt 1 discriminator 2 view .LVU127
 496 00a8 079B     		ldr	r3, [sp, #28]
 497              	.LVL44:
 311:Core/Src/main.c ****     		x0 = ((x / (double)width) * 3.5) - 2.5;
 498              		.loc 1 311 34 is_stmt 0 discriminator 2 view .LVU128
 499 00aa 0133     		adds	r3, r3, #1
 500 00ac 0793     		str	r3, [sp, #28]
 501              	.LVL45:
 502              	.L24:
 311:Core/Src/main.c ****     		x0 = ((x / (double)width) * 3.5) - 2.5;
 503              		.loc 1 311 24 is_stmt 1 discriminator 1 view .LVU129
 504 00ae 079B     		ldr	r3, [sp, #28]
 505 00b0 089A     		ldr	r2, [sp, #32]
 506 00b2 9342     		cmp	r3, r2
 507 00b4 34DA     		bge	.L27
 312:Core/Src/main.c ****        		y0 = ((y / (double)height) * 2.0) - 1.0;
 508              		.loc 1 312 7 view .LVU130
 312:Core/Src/main.c ****        		y0 = ((y / (double)height) * 2.0) - 1.0;
 509              		.loc 1 312 18 is_stmt 0 view .LVU131
 510 00b6 0898     		ldr	r0, [sp, #32]
 511 00b8 FFF7FEFF 		bl	__aeabi_i2d
 512              	.LVL46:
 513 00bc 0446     		mov	r4, r0
 514 00be 0D46     		mov	r5, r1
 312:Core/Src/main.c ****        		y0 = ((y / (double)height) * 2.0) - 1.0;
 515              		.loc 1 312 16 view .LVU132
 516 00c0 0798     		ldr	r0, [sp, #28]
 517 00c2 FFF7FEFF 		bl	__aeabi_i2d
 518              	.LVL47:
 519 00c6 2246     		mov	r2, r4
 520 00c8 2B46     		mov	r3, r5
 521 00ca FFF7FEFF 		bl	__aeabi_ddiv
 522              	.LVL48:
 312:Core/Src/main.c ****        		y0 = ((y / (double)height) * 2.0) - 1.0;
 523              		.loc 1 312 33 view .LVU133
 524 00ce 0022     		movs	r2, #0
 525 00d0 1E4B     		ldr	r3, .L29+4
 526 00d2 FFF7FEFF 		bl	__aeabi_dmul
 527              	.LVL49:
 312:Core/Src/main.c ****        		y0 = ((y / (double)height) * 2.0) - 1.0;
 528              		.loc 1 312 10 view .LVU134
 529 00d6 0022     		movs	r2, #0
 530 00d8 1D4B     		ldr	r3, .L29+8
 531 00da FFF7FEFF 		bl	__aeabi_dsub
 532              	.LVL50:
 533 00de CDE90201 		strd	r0, [sp, #8]
 534              	.LVL51:
 313:Core/Src/main.c **** 
 535              		.loc 1 313 10 is_stmt 1 view .LVU135
 313:Core/Src/main.c **** 
 536              		.loc 1 313 21 is_stmt 0 view .LVU136
 537 00e2 0C98     		ldr	r0, [sp, #48]
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 17


 538              	.LVL52:
 313:Core/Src/main.c **** 
 539              		.loc 1 313 21 view .LVU137
 540 00e4 FFF7FEFF 		bl	__aeabi_i2d
 541              	.LVL53:
 542 00e8 0446     		mov	r4, r0
 543 00ea 0D46     		mov	r5, r1
 313:Core/Src/main.c **** 
 544              		.loc 1 313 19 view .LVU138
 545 00ec 0B98     		ldr	r0, [sp, #44]
 546 00ee FFF7FEFF 		bl	__aeabi_i2d
 547              	.LVL54:
 548 00f2 2246     		mov	r2, r4
 549 00f4 2B46     		mov	r3, r5
 550 00f6 FFF7FEFF 		bl	__aeabi_ddiv
 551              	.LVL55:
 552 00fa 0246     		mov	r2, r0
 553 00fc 0B46     		mov	r3, r1
 313:Core/Src/main.c **** 
 554              		.loc 1 313 37 view .LVU139
 555 00fe FFF7FEFF 		bl	__aeabi_dadd
 556              	.LVL56:
 313:Core/Src/main.c **** 
 557              		.loc 1 313 13 view .LVU140
 558 0102 0022     		movs	r2, #0
 559 0104 134B     		ldr	r3, .L29+12
 560 0106 FFF7FEFF 		bl	__aeabi_dsub
 561              	.LVL57:
 562 010a CDE90401 		strd	r0, [sp, #16]
 563              	.LVL58:
 315:Core/Src/main.c ****        		yi = 0.0;
 564              		.loc 1 315 10 is_stmt 1 view .LVU141
 316:Core/Src/main.c **** 
 565              		.loc 1 316 10 view .LVU142
 318:Core/Src/main.c **** 
 566              		.loc 1 318 10 view .LVU143
 320:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 567              		.loc 1 320 10 view .LVU144
 318:Core/Src/main.c **** 
 568              		.loc 1 318 21 is_stmt 0 view .LVU145
 569 010e 0026     		movs	r6, #0
 316:Core/Src/main.c **** 
 570              		.loc 1 316 13 view .LVU146
 571 0110 4FF0000A 		mov	r10, #0
 572 0114 4FF0000B 		mov	fp, #0
 315:Core/Src/main.c ****        		yi = 0.0;
 573              		.loc 1 315 13 view .LVU147
 574 0118 5446     		mov	r4, r10
 575 011a 5D46     		mov	r5, fp
 576 011c 0D9F     		ldr	r7, [sp, #52]
 320:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 577              		.loc 1 320 16 view .LVU148
 578 011e 9EE7     		b	.L20
 579              	.LVL59:
 580              	.L27:
 320:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 581              		.loc 1 320 16 view .LVU149
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 18


 582              	.LBE12:
 310:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 583              		.loc 1 310 34 discriminator 2 view .LVU150
 584 0120 DDF82CB0 		ldr	fp, [sp, #44]
 310:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 585              		.loc 1 310 34 is_stmt 1 discriminator 2 view .LVU151
 586 0124 0BF1010B 		add	fp, fp, #1
 587              	.LVL60:
 588              	.L19:
 310:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 589              		.loc 1 310 23 discriminator 1 view .LVU152
 590 0128 0C9B     		ldr	r3, [sp, #48]
 591 012a 9B45     		cmp	fp, r3
 592 012c 04DA     		bge	.L28
 593              	.LBB13:
 311:Core/Src/main.c ****     		x0 = ((x / (double)width) * 3.5) - 2.5;
 594              		.loc 1 311 15 is_stmt 0 view .LVU153
 595 012e 0023     		movs	r3, #0
 596 0130 0793     		str	r3, [sp, #28]
 597 0132 CDF82CB0 		str	fp, [sp, #44]
 598 0136 BAE7     		b	.L24
 599              	.L28:
 311:Core/Src/main.c ****     		x0 = ((x / (double)width) * 3.5) - 2.5;
 600              		.loc 1 311 15 view .LVU154
 601              	.LBE13:
 602              	.LBE14:
 328:Core/Src/main.c ****        }
 329:Core/Src/main.c ****     }
 330:Core/Src/main.c ****     return mandelbrot_sum;
 331:Core/Src/main.c **** }
 603              		.loc 1 331 1 view .LVU155
 604 0138 DDF828A0 		ldr	r10, [sp, #40]
 330:Core/Src/main.c **** }
 605              		.loc 1 330 5 is_stmt 1 view .LVU156
 606              		.loc 1 331 1 is_stmt 0 view .LVU157
 607 013c 5046     		mov	r0, r10
 608 013e 0999     		ldr	r1, [sp, #36]
 609 0140 0FB0     		add	sp, sp, #60
 610              	.LCFI8:
 611              		.cfi_def_cfa_offset 36
 612              		@ sp needed
 613 0142 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 614              	.LVL61:
 615              	.L30:
 616              		.loc 1 331 1 view .LVU158
 617 0146 00BF     		.align	2
 618              	.L29:
 619 0148 00001040 		.word	1074790400
 620 014c 00000C40 		.word	1074528256
 621 0150 00000440 		.word	1074003968
 622 0154 0000F03F 		.word	1072693248
 623              		.cfi_endproc
 624              	.LFE138:
 626              		.section	.text.Error_Handler,"ax",%progbits
 627              		.align	1
 628              		.global	Error_Handler
 629              		.syntax unified
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 19


 630              		.thumb
 631              		.thumb_func
 633              	Error_Handler:
 634              	.LFB139:
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** /* USER CODE END 4 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** /**
 336:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 337:Core/Src/main.c ****   * @retval None
 338:Core/Src/main.c ****   */
 339:Core/Src/main.c **** void Error_Handler(void)
 340:Core/Src/main.c **** {
 635              		.loc 1 340 1 is_stmt 1 view -0
 636              		.cfi_startproc
 637              		@ Volatile: function does not return.
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640              		@ link register save eliminated.
 341:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 342:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 343:Core/Src/main.c ****   __disable_irq();
 641              		.loc 1 343 3 view .LVU160
 642              	.LBB15:
 643              	.LBI15:
 644              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 20


  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 21


  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 22


 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 23


 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 24


 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 25


 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 26


 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 27


 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 28


 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 29


 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 30


 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 31


 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 32


 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 33


 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 34


 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 35


 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 36


 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 645              		.loc 2 960 27 view .LVU161
 646              	.LBB16:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 647              		.loc 2 962 3 view .LVU162
 648              		.syntax unified
 649              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 650 0000 72B6     		cpsid i
 651              	@ 0 "" 2
 652              		.thumb
 653              		.syntax unified
 654              	.L32:
 655              	.LBE16:
 656              	.LBE15:
 344:Core/Src/main.c ****   while (1)
 657              		.loc 1 344 3 view .LVU163
 345:Core/Src/main.c ****   {
 346:Core/Src/main.c ****   }
 658              		.loc 1 346 3 view .LVU164
 344:Core/Src/main.c ****   while (1)
 659              		.loc 1 344 9 view .LVU165
 660 0002 FEE7     		b	.L32
 661              		.cfi_endproc
 662              	.LFE139:
 664              		.section	.text.SystemClock_Config,"ax",%progbits
 665              		.align	1
 666              		.global	SystemClock_Config
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 671              	SystemClock_Config:
 672              	.LFB135:
 186:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 673              		.loc 1 186 1 view -0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 80
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677 0000 00B5     		push	{lr}
 678              	.LCFI9:
 679              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 37


 680              		.cfi_offset 14, -4
 681 0002 95B0     		sub	sp, sp, #84
 682              	.LCFI10:
 683              		.cfi_def_cfa_offset 88
 187:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 684              		.loc 1 187 3 view .LVU167
 187:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 685              		.loc 1 187 22 is_stmt 0 view .LVU168
 686 0004 3422     		movs	r2, #52
 687 0006 0021     		movs	r1, #0
 688 0008 07A8     		add	r0, sp, #28
 689 000a FFF7FEFF 		bl	memset
 690              	.LVL62:
 188:Core/Src/main.c **** 
 691              		.loc 1 188 3 is_stmt 1 view .LVU169
 188:Core/Src/main.c **** 
 692              		.loc 1 188 22 is_stmt 0 view .LVU170
 693 000e 0023     		movs	r3, #0
 694 0010 0293     		str	r3, [sp, #8]
 695 0012 0393     		str	r3, [sp, #12]
 696 0014 0493     		str	r3, [sp, #16]
 697 0016 0593     		str	r3, [sp, #20]
 698 0018 0693     		str	r3, [sp, #24]
 192:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 699              		.loc 1 192 3 is_stmt 1 view .LVU171
 700              	.LBB17:
 192:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 701              		.loc 1 192 3 view .LVU172
 702 001a 0093     		str	r3, [sp]
 192:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 703              		.loc 1 192 3 view .LVU173
 704 001c 214A     		ldr	r2, .L39
 705 001e 116C     		ldr	r1, [r2, #64]
 706 0020 41F08051 		orr	r1, r1, #268435456
 707 0024 1164     		str	r1, [r2, #64]
 192:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 708              		.loc 1 192 3 view .LVU174
 709 0026 126C     		ldr	r2, [r2, #64]
 710 0028 02F08052 		and	r2, r2, #268435456
 711 002c 0092     		str	r2, [sp]
 192:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 712              		.loc 1 192 3 view .LVU175
 713 002e 009A     		ldr	r2, [sp]
 714              	.LBE17:
 192:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 715              		.loc 1 192 3 view .LVU176
 193:Core/Src/main.c **** 
 716              		.loc 1 193 3 view .LVU177
 717              	.LBB18:
 193:Core/Src/main.c **** 
 718              		.loc 1 193 3 view .LVU178
 719 0030 0193     		str	r3, [sp, #4]
 193:Core/Src/main.c **** 
 720              		.loc 1 193 3 view .LVU179
 721 0032 1D4A     		ldr	r2, .L39+4
 722 0034 1368     		ldr	r3, [r2]
 723 0036 23F44043 		bic	r3, r3, #49152
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 38


 724 003a 43F48043 		orr	r3, r3, #16384
 725 003e 1360     		str	r3, [r2]
 193:Core/Src/main.c **** 
 726              		.loc 1 193 3 view .LVU180
 727 0040 1368     		ldr	r3, [r2]
 728 0042 03F44043 		and	r3, r3, #49152
 729 0046 0193     		str	r3, [sp, #4]
 193:Core/Src/main.c **** 
 730              		.loc 1 193 3 view .LVU181
 731 0048 019B     		ldr	r3, [sp, #4]
 732              	.LBE18:
 193:Core/Src/main.c **** 
 733              		.loc 1 193 3 view .LVU182
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 734              		.loc 1 198 3 view .LVU183
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 735              		.loc 1 198 36 is_stmt 0 view .LVU184
 736 004a 0123     		movs	r3, #1
 737 004c 0793     		str	r3, [sp, #28]
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 738              		.loc 1 199 3 is_stmt 1 view .LVU185
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 739              		.loc 1 199 30 is_stmt 0 view .LVU186
 740 004e 4FF48033 		mov	r3, #65536
 741 0052 0893     		str	r3, [sp, #32]
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 742              		.loc 1 200 3 is_stmt 1 view .LVU187
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 743              		.loc 1 200 34 is_stmt 0 view .LVU188
 744 0054 0223     		movs	r3, #2
 745 0056 0D93     		str	r3, [sp, #52]
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 746              		.loc 1 201 3 is_stmt 1 view .LVU189
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 747              		.loc 1 201 35 is_stmt 0 view .LVU190
 748 0058 4FF48002 		mov	r2, #4194304
 749 005c 0E92     		str	r2, [sp, #56]
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 750              		.loc 1 202 3 is_stmt 1 view .LVU191
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 751              		.loc 1 202 30 is_stmt 0 view .LVU192
 752 005e 0F22     		movs	r2, #15
 753 0060 0F92     		str	r2, [sp, #60]
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 754              		.loc 1 203 3 is_stmt 1 view .LVU193
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 755              		.loc 1 203 30 is_stmt 0 view .LVU194
 756 0062 9022     		movs	r2, #144
 757 0064 1092     		str	r2, [sp, #64]
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 758              		.loc 1 204 3 is_stmt 1 view .LVU195
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 759              		.loc 1 204 30 is_stmt 0 view .LVU196
 760 0066 1193     		str	r3, [sp, #68]
 205:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 761              		.loc 1 205 3 is_stmt 1 view .LVU197
 205:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 39


 762              		.loc 1 205 30 is_stmt 0 view .LVU198
 763 0068 1293     		str	r3, [sp, #72]
 206:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 764              		.loc 1 206 3 is_stmt 1 view .LVU199
 206:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 765              		.loc 1 206 30 is_stmt 0 view .LVU200
 766 006a 1393     		str	r3, [sp, #76]
 207:Core/Src/main.c ****   {
 767              		.loc 1 207 3 is_stmt 1 view .LVU201
 207:Core/Src/main.c ****   {
 768              		.loc 1 207 7 is_stmt 0 view .LVU202
 769 006c 07A8     		add	r0, sp, #28
 770 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 771              	.LVL63:
 207:Core/Src/main.c ****   {
 772              		.loc 1 207 6 discriminator 1 view .LVU203
 773 0072 98B9     		cbnz	r0, .L37
 214:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 774              		.loc 1 214 3 is_stmt 1 view .LVU204
 214:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 775              		.loc 1 214 31 is_stmt 0 view .LVU205
 776 0074 0F23     		movs	r3, #15
 777 0076 0293     		str	r3, [sp, #8]
 216:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 778              		.loc 1 216 3 is_stmt 1 view .LVU206
 216:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 779              		.loc 1 216 34 is_stmt 0 view .LVU207
 780 0078 0223     		movs	r3, #2
 781 007a 0393     		str	r3, [sp, #12]
 217:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 782              		.loc 1 217 3 is_stmt 1 view .LVU208
 217:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 783              		.loc 1 217 35 is_stmt 0 view .LVU209
 784 007c 0023     		movs	r3, #0
 785 007e 0493     		str	r3, [sp, #16]
 218:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 786              		.loc 1 218 3 is_stmt 1 view .LVU210
 218:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 787              		.loc 1 218 36 is_stmt 0 view .LVU211
 788 0080 4FF4A053 		mov	r3, #5120
 789 0084 0593     		str	r3, [sp, #20]
 219:Core/Src/main.c **** 
 790              		.loc 1 219 3 is_stmt 1 view .LVU212
 219:Core/Src/main.c **** 
 791              		.loc 1 219 36 is_stmt 0 view .LVU213
 792 0086 4FF48053 		mov	r3, #4096
 793 008a 0693     		str	r3, [sp, #24]
 221:Core/Src/main.c ****   {
 794              		.loc 1 221 3 is_stmt 1 view .LVU214
 221:Core/Src/main.c ****   {
 795              		.loc 1 221 7 is_stmt 0 view .LVU215
 796 008c 0321     		movs	r1, #3
 797 008e 02A8     		add	r0, sp, #8
 798 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 799              	.LVL64:
 221:Core/Src/main.c ****   {
 800              		.loc 1 221 6 discriminator 1 view .LVU216
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 40


 801 0094 20B9     		cbnz	r0, .L38
 225:Core/Src/main.c **** 
 802              		.loc 1 225 1 view .LVU217
 803 0096 15B0     		add	sp, sp, #84
 804              	.LCFI11:
 805              		.cfi_remember_state
 806              		.cfi_def_cfa_offset 4
 807              		@ sp needed
 808 0098 5DF804FB 		ldr	pc, [sp], #4
 809              	.L37:
 810              	.LCFI12:
 811              		.cfi_restore_state
 209:Core/Src/main.c ****   }
 812              		.loc 1 209 5 is_stmt 1 view .LVU218
 813 009c FFF7FEFF 		bl	Error_Handler
 814              	.LVL65:
 815              	.L38:
 223:Core/Src/main.c ****   }
 816              		.loc 1 223 5 view .LVU219
 817 00a0 FFF7FEFF 		bl	Error_Handler
 818              	.LVL66:
 819              	.L40:
 820              		.align	2
 821              	.L39:
 822 00a4 00380240 		.word	1073887232
 823 00a8 00700040 		.word	1073770496
 824              		.cfi_endproc
 825              	.LFE135:
 827              		.global	__aeabi_ui2d
 828              		.global	__aeabi_ul2d
 829              		.section	.text.main,"ax",%progbits
 830              		.align	1
 831              		.global	main
 832              		.syntax unified
 833              		.thumb
 834              		.thumb_func
 836              	main:
 837              	.LFB134:
  89:Core/Src/main.c **** 
 838              		.loc 1 89 1 view -0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 843              	.LCFI13:
 844              		.cfi_def_cfa_offset 40
 845              		.cfi_offset 3, -40
 846              		.cfi_offset 4, -36
 847              		.cfi_offset 5, -32
 848              		.cfi_offset 6, -28
 849              		.cfi_offset 7, -24
 850              		.cfi_offset 8, -20
 851              		.cfi_offset 9, -16
 852              		.cfi_offset 10, -12
 853              		.cfi_offset 11, -8
 854              		.cfi_offset 14, -4
  98:Core/Src/main.c **** 
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 41


 855              		.loc 1 98 3 view .LVU221
 856 0004 FFF7FEFF 		bl	HAL_Init
 857              	.LVL67:
 105:Core/Src/main.c **** 
 858              		.loc 1 105 3 view .LVU222
 859 0008 FFF7FEFF 		bl	SystemClock_Config
 860              	.LVL68:
 112:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 861              		.loc 1 112 3 view .LVU223
 862 000c FFF7FEFF 		bl	MX_GPIO_Init
 863              	.LVL69:
 114:Core/Src/main.c ****   DWT->CYCCNT = 0;
 864              		.loc 1 114 3 view .LVU224
 114:Core/Src/main.c ****   DWT->CYCCNT = 0;
 865              		.loc 1 114 12 is_stmt 0 view .LVU225
 866 0010 424A     		ldr	r2, .L46
 867 0012 D2F8FC30 		ldr	r3, [r2, #252]
 114:Core/Src/main.c ****   DWT->CYCCNT = 0;
 868              		.loc 1 114 20 view .LVU226
 869 0016 43F08073 		orr	r3, r3, #16777216
 870 001a C2F8FC30 		str	r3, [r2, #252]
 115:Core/Src/main.c ****   DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 871              		.loc 1 115 3 is_stmt 1 view .LVU227
 115:Core/Src/main.c ****   DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 872              		.loc 1 115 15 is_stmt 0 view .LVU228
 873 001e 404B     		ldr	r3, .L46+4
 874 0020 0022     		movs	r2, #0
 875 0022 5A60     		str	r2, [r3, #4]
 116:Core/Src/main.c ****   /* USER CODE END 2 */
 876              		.loc 1 116 3 is_stmt 1 view .LVU229
 116:Core/Src/main.c ****   /* USER CODE END 2 */
 877              		.loc 1 116 6 is_stmt 0 view .LVU230
 878 0024 1A68     		ldr	r2, [r3]
 116:Core/Src/main.c ****   /* USER CODE END 2 */
 879              		.loc 1 116 13 view .LVU231
 880 0026 42F00102 		orr	r2, r2, #1
 881 002a 1A60     		str	r2, [r3]
 882 002c 73E0     		b	.L44
 883              	.LVL70:
 884              	.L43:
 885              	.LBB19:
 886              	.LBB20:
 128:Core/Src/main.c **** 		int height = heights[i];
 887              		.loc 1 128 3 is_stmt 1 view .LVU232
 128:Core/Src/main.c **** 		int height = heights[i];
 888              		.loc 1 128 7 is_stmt 0 view .LVU233
 889 002e 3D4B     		ldr	r3, .L46+8
 890 0030 53F82480 		ldr	r8, [r3, r4, lsl #2]
 891              	.LVL71:
 129:Core/Src/main.c **** 
 892              		.loc 1 129 3 is_stmt 1 view .LVU234
 129:Core/Src/main.c **** 
 893              		.loc 1 129 7 is_stmt 0 view .LVU235
 894 0034 3C4B     		ldr	r3, .L46+12
 895 0036 53F82460 		ldr	r6, [r3, r4, lsl #2]
 896              	.LVL72:
 132:Core/Src/main.c **** 
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 42


 897              		.loc 1 132 6 is_stmt 1 view .LVU236
 898 003a 3C4F     		ldr	r7, .L46+16
 899 003c 0122     		movs	r2, #1
 900 003e 1146     		mov	r1, r2
 901 0040 3846     		mov	r0, r7
 902 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 903              	.LVL73:
 134:Core/Src/main.c **** 		//TODO: Record the start time
 904              		.loc 1 134 3 view .LVU237
 134:Core/Src/main.c **** 		//TODO: Record the start time
 905              		.loc 1 134 15 is_stmt 0 view .LVU238
 906 0046 DFF8D890 		ldr	r9, .L46+4
 907 004a 4FF0000A 		mov	r10, #0
 908 004e C9F804A0 		str	r10, [r9, #4]
 136:Core/Src/main.c **** 
 909              		.loc 1 136 3 is_stmt 1 view .LVU239
 136:Core/Src/main.c **** 
 910              		.loc 1 136 16 is_stmt 0 view .LVU240
 911 0052 FFF7FEFF 		bl	HAL_GetTick
 912              	.LVL74:
 136:Core/Src/main.c **** 
 913              		.loc 1 136 14 discriminator 1 view .LVU241
 914 0056 364D     		ldr	r5, .L46+20
 915 0058 2860     		str	r0, [r5]
 139:Core/Src/main.c **** 		checksums[i] = checksum;
 916              		.loc 1 139 3 is_stmt 1 view .LVU242
 139:Core/Src/main.c **** 		checksums[i] = checksum;
 917              		.loc 1 139 14 is_stmt 0 view .LVU243
 918 005a 6422     		movs	r2, #100
 919 005c 3146     		mov	r1, r6
 920 005e 4046     		mov	r0, r8
 921 0060 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 922              	.LVL75:
 139:Core/Src/main.c **** 		checksums[i] = checksum;
 923              		.loc 1 139 12 discriminator 1 view .LVU244
 924 0064 334B     		ldr	r3, .L46+24
 925 0066 1860     		str	r0, [r3]
 926 0068 5960     		str	r1, [r3, #4]
 140:Core/Src/main.c **** 
 927              		.loc 1 140 3 is_stmt 1 view .LVU245
 140:Core/Src/main.c **** 
 928              		.loc 1 140 16 is_stmt 0 view .LVU246
 929 006a 4FEAC40B 		lsl	fp, r4, #3
 930 006e 324B     		ldr	r3, .L46+28
 931 0070 03EBC403 		add	r3, r3, r4, lsl #3
 932 0074 1860     		str	r0, [r3]
 933 0076 5960     		str	r1, [r3, #4]
 143:Core/Src/main.c **** 
 934              		.loc 1 143 3 is_stmt 1 view .LVU247
 143:Core/Src/main.c **** 
 935              		.loc 1 143 14 is_stmt 0 view .LVU248
 936 0078 FFF7FEFF 		bl	HAL_GetTick
 937              	.LVL76:
 143:Core/Src/main.c **** 
 938              		.loc 1 143 12 discriminator 1 view .LVU249
 939 007c 2F4B     		ldr	r3, .L46+32
 940 007e 1860     		str	r0, [r3]
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 43


 145:Core/Src/main.c **** 
 941              		.loc 1 145 3 is_stmt 1 view .LVU250
 145:Core/Src/main.c **** 
 942              		.loc 1 145 17 is_stmt 0 view .LVU251
 943 0080 D9F80430 		ldr	r3, [r9, #4]
 145:Core/Src/main.c **** 
 944              		.loc 1 145 12 view .LVU252
 945 0084 2E4A     		ldr	r2, .L46+36
 946 0086 1360     		str	r3, [r2]
 147:Core/Src/main.c **** 		//TODO: Calculate the execution time
 947              		.loc 1 147 3 is_stmt 1 view .LVU253
 147:Core/Src/main.c **** 		//TODO: Calculate the execution time
 948              		.loc 1 147 16 is_stmt 0 view .LVU254
 949 0088 2E4A     		ldr	r2, .L46+40
 950 008a 42F82430 		str	r3, [r2, r4, lsl #2]
 150:Core/Src/main.c **** 		execTimes[i] = execution_time;
 951              		.loc 1 150 3 is_stmt 1 view .LVU255
 150:Core/Src/main.c **** 		execTimes[i] = execution_time;
 952              		.loc 1 150 29 is_stmt 0 view .LVU256
 953 008e 2B68     		ldr	r3, [r5]
 954 0090 C01A     		subs	r0, r0, r3
 150:Core/Src/main.c **** 		execTimes[i] = execution_time;
 955              		.loc 1 150 18 view .LVU257
 956 0092 2D4B     		ldr	r3, .L46+44
 957 0094 1860     		str	r0, [r3]
 151:Core/Src/main.c **** 
 958              		.loc 1 151 3 is_stmt 1 view .LVU258
 151:Core/Src/main.c **** 
 959              		.loc 1 151 16 is_stmt 0 view .LVU259
 960 0096 2D4B     		ldr	r3, .L46+48
 961 0098 43F82400 		str	r0, [r3, r4, lsl #2]
 153:Core/Src/main.c **** 		executionSec = (double)execution_time / 1000.0;
 962              		.loc 1 153 3 is_stmt 1 view .LVU260
 153:Core/Src/main.c **** 		executionSec = (double)execution_time / 1000.0;
 963              		.loc 1 153 17 is_stmt 0 view .LVU261
 964 009c 4FEAE875 		asr	r5, r8, #31
 153:Core/Src/main.c **** 		executionSec = (double)execution_time / 1000.0;
 965              		.loc 1 153 33 view .LVU262
 966 00a0 F317     		asrs	r3, r6, #31
 967 00a2 06FB05F5 		mul	r5, r6, r5
 968 00a6 08FB0355 		mla	r5, r8, r3, r5
 969 00aa A6FB0863 		umull	r6, r3, r6, r8
 970              	.LVL77:
 153:Core/Src/main.c **** 		executionSec = (double)execution_time / 1000.0;
 971              		.loc 1 153 33 view .LVU263
 972 00ae 1D44     		add	r5, r5, r3
 153:Core/Src/main.c **** 		executionSec = (double)execution_time / 1000.0;
 973              		.loc 1 153 15 view .LVU264
 974 00b0 274B     		ldr	r3, .L46+52
 975 00b2 1E60     		str	r6, [r3]
 976 00b4 5D60     		str	r5, [r3, #4]
 154:Core/Src/main.c **** 		throughput = (double)totalPixels/executionSec;
 977              		.loc 1 154 3 is_stmt 1 view .LVU265
 154:Core/Src/main.c **** 		throughput = (double)totalPixels/executionSec;
 978              		.loc 1 154 18 is_stmt 0 view .LVU266
 979 00b6 FFF7FEFF 		bl	__aeabi_ui2d
 980              	.LVL78:
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 44


 154:Core/Src/main.c **** 		throughput = (double)totalPixels/executionSec;
 981              		.loc 1 154 41 view .LVU267
 982 00ba 0022     		movs	r2, #0
 983 00bc 254B     		ldr	r3, .L46+56
 984 00be FFF7FEFF 		bl	__aeabi_ddiv
 985              	.LVL79:
 986 00c2 8046     		mov	r8, r0
 987              	.LVL80:
 154:Core/Src/main.c **** 		throughput = (double)totalPixels/executionSec;
 988              		.loc 1 154 41 view .LVU268
 989 00c4 8946     		mov	r9, r1
 154:Core/Src/main.c **** 		throughput = (double)totalPixels/executionSec;
 990              		.loc 1 154 16 view .LVU269
 991 00c6 244B     		ldr	r3, .L46+60
 992 00c8 C3E90089 		strd	r8, [r3]
 155:Core/Src/main.c **** 
 993              		.loc 1 155 3 is_stmt 1 view .LVU270
 155:Core/Src/main.c **** 
 994              		.loc 1 155 16 is_stmt 0 view .LVU271
 995 00cc 3046     		mov	r0, r6
 996 00ce 2946     		mov	r1, r5
 997 00d0 FFF7FEFF 		bl	__aeabi_ul2d
 998              	.LVL81:
 155:Core/Src/main.c **** 
 999              		.loc 1 155 35 view .LVU272
 1000 00d4 4246     		mov	r2, r8
 1001 00d6 4B46     		mov	r3, r9
 1002 00d8 FFF7FEFF 		bl	__aeabi_ddiv
 1003              	.LVL82:
 155:Core/Src/main.c **** 
 1004              		.loc 1 155 14 view .LVU273
 1005 00dc 1F4B     		ldr	r3, .L46+64
 1006 00de C3E90001 		strd	r0, [r3]
 157:Core/Src/main.c **** 		//TODO: Turn on LED 1 to signify the end of the operation
 1007              		.loc 1 157 3 is_stmt 1 view .LVU274
 157:Core/Src/main.c **** 		//TODO: Turn on LED 1 to signify the end of the operation
 1008              		.loc 1 157 18 is_stmt 0 view .LVU275
 1009 00e2 1F4B     		ldr	r3, .L46+68
 1010 00e4 5B44     		add	r3, r3, fp
 1011 00e6 C3E90001 		strd	r0, [r3]
 160:Core/Src/main.c **** 
 1012              		.loc 1 160 3 is_stmt 1 view .LVU276
 1013 00ea 0122     		movs	r2, #1
 1014 00ec 0221     		movs	r1, #2
 1015 00ee 3846     		mov	r0, r7
 1016 00f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1017              	.LVL83:
 165:Core/Src/main.c **** 
 1018              		.loc 1 165 3 view .LVU277
 1019 00f4 4FF4FA60 		mov	r0, #2000
 1020 00f8 FFF7FEFF 		bl	HAL_Delay
 1021              	.LVL84:
 170:Core/Src/main.c **** 
 1022              		.loc 1 170 3 view .LVU278
 1023 00fc 5246     		mov	r2, r10
 1024 00fe 0121     		movs	r1, #1
 1025 0100 3846     		mov	r0, r7
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 45


 1026 0102 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1027              	.LVL85:
 172:Core/Src/main.c **** 
 1028              		.loc 1 172 3 view .LVU279
 1029 0106 5246     		mov	r2, r10
 1030 0108 0221     		movs	r1, #2
 1031 010a 3846     		mov	r0, r7
 1032 010c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1033              	.LVL86:
 1034              	.LBE20:
 127:Core/Src/main.c **** 		int width = widths[i];
 1035              		.loc 1 127 26 discriminator 3 view .LVU280
 1036 0110 0134     		adds	r4, r4, #1
 1037              	.LVL87:
 1038              	.L42:
 127:Core/Src/main.c **** 		int width = widths[i];
 1039              		.loc 1 127 20 discriminator 1 view .LVU281
 1040 0112 042C     		cmp	r4, #4
 1041 0114 8BDD     		ble	.L43
 1042              	.LVL88:
 1043              	.L44:
 127:Core/Src/main.c **** 		int width = widths[i];
 1044              		.loc 1 127 20 is_stmt 0 discriminator 1 view .LVU282
 1045              	.LBE19:
 121:Core/Src/main.c ****   {
 1046              		.loc 1 121 3 is_stmt 1 view .LVU283
 127:Core/Src/main.c **** 		int width = widths[i];
 1047              		.loc 1 127 2 view .LVU284
 1048              	.LBB21:
 127:Core/Src/main.c **** 		int width = widths[i];
 1049              		.loc 1 127 7 view .LVU285
 127:Core/Src/main.c **** 		int width = widths[i];
 1050              		.loc 1 127 11 is_stmt 0 view .LVU286
 1051 0116 0024     		movs	r4, #0
 127:Core/Src/main.c **** 		int width = widths[i];
 1052              		.loc 1 127 2 view .LVU287
 1053 0118 FBE7     		b	.L42
 1054              	.L47:
 1055 011a 00BF     		.align	2
 1056              	.L46:
 1057 011c 00ED00E0 		.word	-536810240
 1058 0120 001000E0 		.word	-536866816
 1059 0124 00000000 		.word	widths
 1060 0128 00000000 		.word	heights
 1061 012c 00040240 		.word	1073873920
 1062 0130 00000000 		.word	start_time
 1063 0134 00000000 		.word	checksum
 1064 0138 00000000 		.word	checksums
 1065 013c 00000000 		.word	end_time
 1066 0140 00000000 		.word	cpuCycle
 1067 0144 00000000 		.word	cpuCycles
 1068 0148 00000000 		.word	execution_time
 1069 014c 00000000 		.word	execTimes
 1070 0150 00000000 		.word	totalPixels
 1071 0154 00408F40 		.word	1083129856
 1072 0158 00000000 		.word	executionSec
 1073 015c 00000000 		.word	throughput
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 46


 1074 0160 00000000 		.word	throughputs
 1075              	.LBE21:
 1076              		.cfi_endproc
 1077              	.LFE134:
 1079              		.global	throughputs
 1080              		.section	.bss.throughputs,"aw",%nobits
 1081              		.align	3
 1084              	throughputs:
 1085 0000 00000000 		.space	40
 1085      00000000 
 1085      00000000 
 1085      00000000 
 1085      00000000 
 1086              		.global	cpuCycles
 1087              		.section	.bss.cpuCycles,"aw",%nobits
 1088              		.align	2
 1091              	cpuCycles:
 1092 0000 00000000 		.space	20
 1092      00000000 
 1092      00000000 
 1092      00000000 
 1092      00000000 
 1093              		.global	checksums
 1094              		.section	.bss.checksums,"aw",%nobits
 1095              		.align	3
 1098              	checksums:
 1099 0000 00000000 		.space	40
 1099      00000000 
 1099      00000000 
 1099      00000000 
 1099      00000000 
 1100              		.global	execTimes
 1101              		.section	.bss.execTimes,"aw",%nobits
 1102              		.align	2
 1105              	execTimes:
 1106 0000 00000000 		.space	20
 1106      00000000 
 1106      00000000 
 1106      00000000 
 1106      00000000 
 1107              		.global	heights
 1108              		.section	.data.heights,"aw"
 1109              		.align	2
 1112              	heights:
 1113 0000 00020000 		.word	512
 1114 0004 E0010000 		.word	480
 1115 0008 58020000 		.word	600
 1116 000c D0020000 		.word	720
 1117 0010 38040000 		.word	1080
 1118              		.global	widths
 1119              		.section	.data.widths,"aw"
 1120              		.align	2
 1123              	widths:
 1124 0000 00020000 		.word	512
 1125 0004 80020000 		.word	640
 1126 0008 20030000 		.word	800
 1127 000c 00050000 		.word	1280
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 47


 1128 0010 80070000 		.word	1920
 1129              		.global	height
 1130              		.section	.bss.height,"aw",%nobits
 1131              		.align	2
 1134              	height:
 1135 0000 00000000 		.space	4
 1136              		.global	width
 1137              		.section	.bss.width,"aw",%nobits
 1138              		.align	2
 1141              	width:
 1142 0000 00000000 		.space	4
 1143              		.global	throughput
 1144              		.section	.bss.throughput,"aw",%nobits
 1145              		.align	3
 1148              	throughput:
 1149 0000 00000000 		.space	8
 1149      00000000 
 1150              		.global	executionSec
 1151              		.section	.bss.executionSec,"aw",%nobits
 1152              		.align	3
 1155              	executionSec:
 1156 0000 00000000 		.space	8
 1156      00000000 
 1157              		.global	totalPixels
 1158              		.section	.bss.totalPixels,"aw",%nobits
 1159              		.align	3
 1162              	totalPixels:
 1163 0000 00000000 		.space	8
 1163      00000000 
 1164              		.global	cpuCycle
 1165              		.section	.bss.cpuCycle,"aw",%nobits
 1166              		.align	2
 1169              	cpuCycle:
 1170 0000 00000000 		.space	4
 1171              		.global	checksum
 1172              		.section	.bss.checksum,"aw",%nobits
 1173              		.align	3
 1176              	checksum:
 1177 0000 00000000 		.space	8
 1177      00000000 
 1178              		.global	execution_time
 1179              		.section	.bss.execution_time,"aw",%nobits
 1180              		.align	2
 1183              	execution_time:
 1184 0000 00000000 		.space	4
 1185              		.global	end_time
 1186              		.section	.bss.end_time,"aw",%nobits
 1187              		.align	2
 1190              	end_time:
 1191 0000 00000000 		.space	4
 1192              		.global	start_time
 1193              		.section	.bss.start_time,"aw",%nobits
 1194              		.align	2
 1197              	start_time:
 1198 0000 00000000 		.space	4
 1199              		.text
 1200              	.Letext0:
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 48


 1201              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1202              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1203              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1204              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1205              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1206              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1207              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1208              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1209              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1210              		.file 12 "<built-in>"
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 49


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:131    .text.MX_GPIO_Init:00000074 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:142    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:148    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:339    .text.calculate_mandelbrot_fixed_point_arithmetic:000000c4 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:347    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:353    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:619    .text.calculate_mandelbrot_double:00000148 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:627    .text.Error_Handler:00000000 $t
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:633    .text.Error_Handler:00000000 Error_Handler
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:665    .text.SystemClock_Config:00000000 $t
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:671    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:822    .text.SystemClock_Config:000000a4 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:830    .text.main:00000000 $t
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:836    .text.main:00000000 main
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1057   .text.main:0000011c $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1123   .data.widths:00000000 widths
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1112   .data.heights:00000000 heights
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1197   .bss.start_time:00000000 start_time
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1176   .bss.checksum:00000000 checksum
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1098   .bss.checksums:00000000 checksums
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1190   .bss.end_time:00000000 end_time
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1169   .bss.cpuCycle:00000000 cpuCycle
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1091   .bss.cpuCycles:00000000 cpuCycles
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1183   .bss.execution_time:00000000 execution_time
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1105   .bss.execTimes:00000000 execTimes
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1162   .bss.totalPixels:00000000 totalPixels
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1155   .bss.executionSec:00000000 executionSec
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1148   .bss.throughput:00000000 throughput
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1084   .bss.throughputs:00000000 throughputs
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1081   .bss.throughputs:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1088   .bss.cpuCycles:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1095   .bss.checksums:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1102   .bss.execTimes:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1109   .data.heights:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1120   .data.widths:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1134   .bss.height:00000000 height
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1131   .bss.height:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1141   .bss.width:00000000 width
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1138   .bss.width:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1145   .bss.throughput:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1152   .bss.executionSec:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1159   .bss.totalPixels:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1166   .bss.cpuCycle:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1173   .bss.checksum:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1180   .bss.execution_time:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1187   .bss.end_time:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s:1194   .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_i2d
__aeabi_dmul
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccbUbMXb.s 			page 50


__aeabi_ddiv
__aeabi_dsub
__aeabi_d2iz
__aeabi_dadd
__aeabi_dcmplt
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_ui2d
__aeabi_ul2d
HAL_Init
HAL_GetTick
HAL_Delay
