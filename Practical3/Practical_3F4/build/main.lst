ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB136:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include "stm32f4xx.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** #define MAX_ITER 100
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define variables you think you might need
  47:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  48:Core/Src/main.c **** uint32_t start_time = 0;
  49:Core/Src/main.c **** uint32_t end_time = 0;
  50:Core/Src/main.c **** uint32_t execution_time = 0;
  51:Core/Src/main.c **** uint64_t checksum = 0;
  52:Core/Src/main.c **** int width = 128;
  53:Core/Src/main.c **** int height = 128;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** static void MX_GPIO_Init(void);
  60:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  61:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  62:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  63:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Core/Src/main.c ****   HAL_Init();
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN Init */
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END Init */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Configure the system clock */
  93:Core/Src/main.c ****   SystemClock_Config();
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Initialize all configured peripherals */
 100:Core/Src/main.c ****   MX_GPIO_Init();
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END 2 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Infinite loop */
 106:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 107:Core/Src/main.c ****   while (1)
 108:Core/Src/main.c ****   {
 109:Core/Src/main.c ****     /* USER CODE END WHILE */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 112:Core/Src/main.c **** 	//TODO: Visual indicator: Turn on LED0 to signal processing start
 113:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** 	//TODO: Record the start time
 116:Core/Src/main.c **** 	start_time = HAL_GetTick();
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** 	//TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initial
 119:Core/Src/main.c **** 	checksum = calculate_mandelbrot_fixed_point_arithmetic(width, height, MAX_ITER);
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****     //TODO: Record the end time
 122:Core/Src/main.c **** 	end_time = HAL_GetTick();
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** 	//TODO: Calculate the execution time
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** 	execution_time = end_time - start_time;
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** 	//TODO: Turn on LED 1 to signify the end of the operation
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** 	//TODO: Hold the LEDs on for a 2s delay
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** 	HAL_Delay(2000);
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** 	//TODO: Turn off the LEDs
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 145:Core/Src/main.c **** 
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   }
 148:Core/Src/main.c ****   /* USER CODE END 3 */
 149:Core/Src/main.c **** }
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** /**
 152:Core/Src/main.c ****   * @brief System Clock Configuration
 153:Core/Src/main.c ****   * @retval None
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c **** void SystemClock_Config(void)
 156:Core/Src/main.c **** {
 157:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 158:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 161:Core/Src/main.c ****   */
 162:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 163:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 166:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 167:Core/Src/main.c ****   */
 168:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 169:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 177:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 178:Core/Src/main.c ****   {
 179:Core/Src/main.c ****     Error_Handler();
 180:Core/Src/main.c ****   }
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 185:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 186:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 187:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 188:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 189:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c **** }
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** /**
 198:Core/Src/main.c ****   * @brief GPIO Initialization Function
 199:Core/Src/main.c ****   * @param None
 200:Core/Src/main.c ****   * @retval None
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c **** static void MX_GPIO_Init(void)
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 5


 203:Core/Src/main.c **** {
  28              		.loc 1 203 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 204:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 204 3 view .LVU1
  42              		.loc 1 204 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 205:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 210:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 210 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 210 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 210 3 view .LVU5
  54 0012 184B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 210 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 210 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 210 3 view .LVU8
 211:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 211 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 211 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 211 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 211 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 6


  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 211 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE5:
  81              		.loc 1 211 3 view .LVU14
 212:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  82              		.loc 1 212 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 212 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 212 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00202 		orr	r2, r2, #2
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 212 3 view .LVU18
  91 0044 1B6B     		ldr	r3, [r3, #48]
  92 0046 03F00203 		and	r3, r3, #2
  93 004a 0293     		str	r3, [sp, #8]
  94              		.loc 1 212 3 view .LVU19
  95 004c 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 212 3 view .LVU20
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 215:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  98              		.loc 1 215 3 view .LVU21
  99 004e 0A4D     		ldr	r5, .L3+4
 100 0050 2246     		mov	r2, r4
 101 0052 FF21     		movs	r1, #255
 102 0054 2846     		mov	r0, r5
 103 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 216:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 219:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 220:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 105              		.loc 1 220 3 view .LVU22
 106              		.loc 1 220 23 is_stmt 0 view .LVU23
 107 005a FF23     		movs	r3, #255
 108 005c 0393     		str	r3, [sp, #12]
 221:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 222:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 222 3 is_stmt 1 view .LVU24
 110              		.loc 1 222 24 is_stmt 0 view .LVU25
 111 005e 0123     		movs	r3, #1
 112 0060 0493     		str	r3, [sp, #16]
 223:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 223 3 is_stmt 1 view .LVU26
 114              		.loc 1 223 24 is_stmt 0 view .LVU27
 115 0062 0594     		str	r4, [sp, #20]
 224:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 224 3 is_stmt 1 view .LVU28
 117              		.loc 1 224 25 is_stmt 0 view .LVU29
 118 0064 0694     		str	r4, [sp, #24]
 225:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 7


 119              		.loc 1 225 3 is_stmt 1 view .LVU30
 120 0066 03A9     		add	r1, sp, #12
 121 0068 2846     		mov	r0, r5
 122 006a FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL1:
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 230:Core/Src/main.c **** }
 124              		.loc 1 230 1 is_stmt 0 view .LVU31
 125 006e 09B0     		add	sp, sp, #36
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 12
 128              		@ sp needed
 129 0070 30BD     		pop	{r4, r5, pc}
 130              	.L4:
 131 0072 00BF     		.align	2
 132              	.L3:
 133 0074 00380240 		.word	1073887232
 134 0078 00040240 		.word	1073873920
 135              		.cfi_endproc
 136              	.LFE136:
 138              		.global	__aeabi_i2d
 139              		.global	__aeabi_dmul
 140              		.global	__aeabi_ddiv
 141              		.global	__aeabi_dsub
 142              		.global	__aeabi_d2iz
 143              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 144              		.align	1
 145              		.global	calculate_mandelbrot_fixed_point_arithmetic
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 150              	calculate_mandelbrot_fixed_point_arithmetic:
 151              	.LVL2:
 152              	.LFB137:
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 233:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 234:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 153              		.loc 1 234 96 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 8
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		.loc 1 234 96 is_stmt 0 view .LVU33
 158 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 159              	.LCFI3:
 160              		.cfi_def_cfa_offset 36
 161              		.cfi_offset 4, -36
 162              		.cfi_offset 5, -32
 163              		.cfi_offset 6, -28
 164              		.cfi_offset 7, -24
 165              		.cfi_offset 8, -20
 166              		.cfi_offset 9, -16
 167              		.cfi_offset 10, -12
 168              		.cfi_offset 11, -8
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 8


 169              		.cfi_offset 14, -4
 170 0004 83B0     		sub	sp, sp, #12
 171              	.LCFI4:
 172              		.cfi_def_cfa_offset 48
 173 0006 8246     		mov	r10, r0
 174 0008 8846     		mov	r8, r1
 175 000a 1446     		mov	r4, r2
 235:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 176              		.loc 1 235 3 is_stmt 1 view .LVU34
 177              	.LVL3:
 236:Core/Src/main.c ****     //TODO: Complete the function implementation
 237:Core/Src/main.c ****     int x0, xi;
 178              		.loc 1 237 5 view .LVU35
 238:Core/Src/main.c ****     int y0, yi;
 179              		.loc 1 238 5 view .LVU36
 239:Core/Src/main.c ****     int temp;
 180              		.loc 1 239 5 view .LVU37
 240:Core/Src/main.c ****     int iterations;
 181              		.loc 1 240 5 view .LVU38
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** 	#define FixedShift 12
 243:Core/Src/main.c **** 	#define fixed_1 (1 << FixedShift)
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 182              		.loc 1 245 5 view .LVU39
 183              	.LBB7:
 184              		.loc 1 245 10 view .LVU40
 185              		.loc 1 245 14 is_stmt 0 view .LVU41
 186 000c 4FF00009 		mov	r9, #0
 187              	.LBE7:
 235:Core/Src/main.c ****     //TODO: Complete the function implementation
 188              		.loc 1 235 12 view .LVU42
 189 0010 4E46     		mov	r6, r9
 190 0012 CB46     		mov	fp, r9
 191              	.LBB10:
 192              		.loc 1 245 5 view .LVU43
 193 0014 42E0     		b	.L6
 194              	.LVL4:
 195              	.L10:
 196              	.LBB8:
 246:Core/Src/main.c ****     	y0 = ((y * (2 * fixed_1)) / height) - (fixed_1 * 1);
 247:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 248:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****     		xi = 0;
 252:Core/Src/main.c ****     		yi = 0;
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****     		iterations = 0;
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****     		while ((iterations < max_iterations) && (((xi * xi) >> FixedShift) + ((yi * yi) >> FixedShift
 257:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 197              		.loc 1 257 8 is_stmt 1 view .LVU44
 198              		.loc 1 257 41 is_stmt 0 view .LVU45
 199 0016 A8EB0202 		sub	r2, r8, r2
 200              	.LVL5:
 258:Core/Src/main.c ****     			yi = (((2 * xi * yi) >> FixedShift) + y0);
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 9


 201              		.loc 1 258 8 is_stmt 1 view .LVU46
 202              		.loc 1 258 23 is_stmt 0 view .LVU47
 203 001a 0CFB03F3 		mul	r3, ip, r3
 204              	.LVL6:
 205              		.loc 1 258 29 view .LVU48
 206 001e 43F3D323 		sbfx	r3, r3, #11, #20
 207              		.loc 1 258 11 view .LVU49
 208 0022 03EB050C 		add	ip, r3, r5
 209              	.LVL7:
 259:Core/Src/main.c ****     			xi = temp;
 210              		.loc 1 259 8 is_stmt 1 view .LVU50
 260:Core/Src/main.c ****     			iterations++;
 211              		.loc 1 260 8 view .LVU51
 212              		.loc 1 260 18 is_stmt 0 view .LVU52
 213 0026 0EF1010E 		add	lr, lr, #1
 214              	.LVL8:
 259:Core/Src/main.c ****     			xi = temp;
 215              		.loc 1 259 11 view .LVU53
 216 002a 1318     		adds	r3, r2, r0
 217              	.LVL9:
 218              	.L8:
 256:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 219              		.loc 1 256 44 is_stmt 1 view .LVU54
 220 002c A645     		cmp	lr, r4
 221 002e 0BDA     		bge	.L9
 256:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 222              		.loc 1 256 53 is_stmt 0 discriminator 1 view .LVU55
 223 0030 03FB03F1 		mul	r1, r3, r3
 256:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 224              		.loc 1 256 59 discriminator 1 view .LVU56
 225 0034 4FEA2138 		asr	r8, r1, #12
 256:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 226              		.loc 1 256 81 discriminator 1 view .LVU57
 227 0038 0CFB0CF2 		mul	r2, ip, ip
 256:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 228              		.loc 1 256 87 discriminator 1 view .LVU58
 229 003c 1213     		asrs	r2, r2, #12
 256:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 230              		.loc 1 256 74 discriminator 1 view .LVU59
 231 003e 02EB2131 		add	r1, r2, r1, asr #12
 256:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 232              		.loc 1 256 44 discriminator 1 view .LVU60
 233 0042 B1F5804F 		cmp	r1, #16384
 234 0046 E6DB     		blt	.L10
 235              	.L9:
 261:Core/Src/main.c ****     		}
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****     		mandelbrot_sum += iterations;
 236              		.loc 1 263 7 is_stmt 1 view .LVU61
 237              		.loc 1 263 22 is_stmt 0 view .LVU62
 238 0048 1EEB0606 		adds	r6, lr, r6
 239              	.LVL10:
 240              		.loc 1 263 22 view .LVU63
 241 004c 4BEBEE7B 		adc	fp, fp, lr, asr #31
 242              	.LVL11:
 247:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 243              		.loc 1 247 34 is_stmt 1 discriminator 2 view .LVU64
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 10


 244 0050 0137     		adds	r7, r7, #1
 245              	.LVL12:
 246              	.L7:
 247:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 247              		.loc 1 247 24 discriminator 1 view .LVU65
 248 0052 5745     		cmp	r7, r10
 249 0054 1CDA     		bge	.L14
 248:Core/Src/main.c **** 
 250              		.loc 1 248 7 view .LVU66
 248:Core/Src/main.c **** 
 251              		.loc 1 248 16 is_stmt 0 view .LVU67
 252 0056 3846     		mov	r0, r7
 253 0058 FFF7FEFF 		bl	__aeabi_i2d
 254              	.LVL13:
 255 005c 0022     		movs	r2, #0
 256 005e 194B     		ldr	r3, .L16
 257 0060 FFF7FEFF 		bl	__aeabi_dmul
 258              	.LVL14:
 259 0064 8046     		mov	r8, r0
 260 0066 8946     		mov	r9, r1
 248:Core/Src/main.c **** 
 261              		.loc 1 248 35 view .LVU68
 262 0068 5046     		mov	r0, r10
 263 006a FFF7FEFF 		bl	__aeabi_i2d
 264              	.LVL15:
 265 006e 0246     		mov	r2, r0
 266 0070 0B46     		mov	r3, r1
 267 0072 4046     		mov	r0, r8
 268 0074 4946     		mov	r1, r9
 269 0076 FFF7FEFF 		bl	__aeabi_ddiv
 270              	.LVL16:
 248:Core/Src/main.c **** 
 271              		.loc 1 248 44 view .LVU69
 272 007a 0022     		movs	r2, #0
 273 007c 124B     		ldr	r3, .L16+4
 274 007e FFF7FEFF 		bl	__aeabi_dsub
 275              	.LVL17:
 248:Core/Src/main.c **** 
 276              		.loc 1 248 10 view .LVU70
 277 0082 FFF7FEFF 		bl	__aeabi_d2iz
 278              	.LVL18:
 251:Core/Src/main.c ****     		yi = 0;
 279              		.loc 1 251 7 is_stmt 1 view .LVU71
 252:Core/Src/main.c **** 
 280              		.loc 1 252 7 view .LVU72
 254:Core/Src/main.c **** 
 281              		.loc 1 254 7 view .LVU73
 256:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 282              		.loc 1 256 7 view .LVU74
 254:Core/Src/main.c **** 
 283              		.loc 1 254 18 is_stmt 0 view .LVU75
 284 0086 4FF0000E 		mov	lr, #0
 252:Core/Src/main.c **** 
 285              		.loc 1 252 10 view .LVU76
 286 008a F446     		mov	ip, lr
 251:Core/Src/main.c ****     		yi = 0;
 287              		.loc 1 251 10 view .LVU77
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 11


 288 008c 7346     		mov	r3, lr
 256:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 289              		.loc 1 256 13 view .LVU78
 290 008e CDE7     		b	.L8
 291              	.LVL19:
 292              	.L14:
 256:Core/Src/main.c ****     			temp = ((xi * xi) >> FixedShift) - ((yi * yi) >> FixedShift) + x0;
 293              		.loc 1 256 13 view .LVU79
 294              	.LBE8:
 245:Core/Src/main.c ****     	y0 = ((y * (2 * fixed_1)) / height) - (fixed_1 * 1);
 295              		.loc 1 245 34 discriminator 2 view .LVU80
 296 0090 DDF80090 		ldr	r9, [sp]
 297 0094 DDF80480 		ldr	r8, [sp, #4]
 245:Core/Src/main.c ****     	y0 = ((y * (2 * fixed_1)) / height) - (fixed_1 * 1);
 298              		.loc 1 245 34 is_stmt 1 discriminator 2 view .LVU81
 299 0098 09F10109 		add	r9, r9, #1
 300              	.LVL20:
 301              	.L6:
 245:Core/Src/main.c ****     	y0 = ((y * (2 * fixed_1)) / height) - (fixed_1 * 1);
 302              		.loc 1 245 23 discriminator 1 view .LVU82
 303 009c C145     		cmp	r9, r8
 304 009e 0BDA     		bge	.L15
 246:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 305              		.loc 1 246 6 view .LVU83
 246:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 306              		.loc 1 246 15 is_stmt 0 view .LVU84
 307 00a0 4FEA4935 		lsl	r5, r9, #13
 246:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 308              		.loc 1 246 32 view .LVU85
 309 00a4 95FBF8F5 		sdiv	r5, r5, r8
 246:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 310              		.loc 1 246 9 view .LVU86
 311 00a8 A5F58055 		sub	r5, r5, #4096
 312              	.LVL21:
 247:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 313              		.loc 1 247 6 is_stmt 1 view .LVU87
 314              	.LBB9:
 247:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 315              		.loc 1 247 11 view .LVU88
 247:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 316              		.loc 1 247 15 is_stmt 0 view .LVU89
 317 00ac 0027     		movs	r7, #0
 318 00ae CDF80090 		str	r9, [sp]
 319 00b2 CDF80480 		str	r8, [sp, #4]
 247:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 320              		.loc 1 247 6 view .LVU90
 321 00b6 CCE7     		b	.L7
 322              	.LVL22:
 323              	.L15:
 247:Core/Src/main.c ****     		x0 = ((x * (3.5 * fixed_1)) / width) - (fixed_1 * 2.5);
 324              		.loc 1 247 6 view .LVU91
 325              	.LBE9:
 326              	.LBE10:
 264:Core/Src/main.c ****     	}
 265:Core/Src/main.c ****     }
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****     return mandelbrot_sum;
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 12


 327              		.loc 1 267 5 is_stmt 1 view .LVU92
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** }
 328              		.loc 1 269 1 is_stmt 0 view .LVU93
 329 00b8 3046     		mov	r0, r6
 330 00ba 5946     		mov	r1, fp
 331 00bc 03B0     		add	sp, sp, #12
 332              	.LCFI5:
 333              		.cfi_def_cfa_offset 36
 334              		@ sp needed
 335 00be BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 336              	.LVL23:
 337              	.L17:
 338              		.loc 1 269 1 view .LVU94
 339 00c2 00BF     		.align	2
 340              	.L16:
 341 00c4 0000CC40 		.word	1087111168
 342 00c8 0000C440 		.word	1086586880
 343              		.cfi_endproc
 344              	.LFE137:
 346              		.global	__aeabi_dadd
 347              		.global	__aeabi_dcmplt
 348              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 349              		.align	1
 350              		.global	calculate_mandelbrot_double
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 355              	calculate_mandelbrot_double:
 356              	.LVL24:
 357              	.LFB138:
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 272:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 358              		.loc 1 272 80 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 56
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		.loc 1 272 80 is_stmt 0 view .LVU96
 363 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 364              	.LCFI6:
 365              		.cfi_def_cfa_offset 36
 366              		.cfi_offset 4, -36
 367              		.cfi_offset 5, -32
 368              		.cfi_offset 6, -28
 369              		.cfi_offset 7, -24
 370              		.cfi_offset 8, -20
 371              		.cfi_offset 9, -16
 372              		.cfi_offset 10, -12
 373              		.cfi_offset 11, -8
 374              		.cfi_offset 14, -4
 375 0004 8FB0     		sub	sp, sp, #60
 376              	.LCFI7:
 377              		.cfi_def_cfa_offset 96
 378 0006 0890     		str	r0, [sp, #32]
 273:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 379              		.loc 1 273 5 is_stmt 1 view .LVU97
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 13


 380              	.LVL25:
 274:Core/Src/main.c ****     //TODO: Complete the function implementation
 275:Core/Src/main.c ****     double x0, xi;
 381              		.loc 1 275 5 view .LVU98
 276:Core/Src/main.c ****     double y0, yi;
 382              		.loc 1 276 5 view .LVU99
 277:Core/Src/main.c ****     double temp;
 383              		.loc 1 277 5 view .LVU100
 278:Core/Src/main.c ****     int iterations;
 384              		.loc 1 278 5 view .LVU101
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 385              		.loc 1 280 5 view .LVU102
 386              	.LBB11:
 387              		.loc 1 280 10 view .LVU103
 388              		.loc 1 280 14 is_stmt 0 view .LVU104
 389 0008 4FF0000C 		mov	ip, #0
 390              	.LBE11:
 273:Core/Src/main.c ****     //TODO: Complete the function implementation
 391              		.loc 1 273 14 view .LVU105
 392 000c CDF824C0 		str	ip, [sp, #36]
 393 0010 0C91     		str	r1, [sp, #48]
 394 0012 E346     		mov	fp, ip
 395 0014 0D92     		str	r2, [sp, #52]
 396 0016 CDF828C0 		str	ip, [sp, #40]
 397              	.LBB14:
 398              		.loc 1 280 5 view .LVU106
 399 001a 85E0     		b	.L19
 400              	.LVL26:
 401              	.L22:
 402              	.LBB12:
 281:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 282:Core/Src/main.c ****     		x0 = ((x / (double)width) * 3.5) - 2.5;
 283:Core/Src/main.c ****        		y0 = ((y / (double)height) * 2.0) - 1.0;
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****        		xi = 0.0;
 286:Core/Src/main.c ****        		yi = 0.0;
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****        		iterations = 0;
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****        		while ((iterations < max_iterations) && ((xi * xi + yi * yi) < 4.0)) {
 291:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 403              		.loc 1 291 11 is_stmt 1 view .LVU107
 404              		.loc 1 291 16 is_stmt 0 view .LVU108
 405 001c 4246     		mov	r2, r8
 406 001e 4B46     		mov	r3, r9
 407 0020 DDE90001 		ldrd	r0, [sp]
 408 0024 FFF7FEFF 		bl	__aeabi_dsub
 409              	.LVL27:
 410 0028 8046     		mov	r8, r0
 411 002a 8946     		mov	r9, r1
 412              	.LVL28:
 292:Core/Src/main.c ****        			yi = (2.0* xi * yi) + y0;
 413              		.loc 1 292 11 is_stmt 1 view .LVU109
 414              		.loc 1 292 20 is_stmt 0 view .LVU110
 415 002c 2246     		mov	r2, r4
 416 002e 2B46     		mov	r3, r5
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 14


 417 0030 2046     		mov	r0, r4
 418 0032 2946     		mov	r1, r5
 419 0034 FFF7FEFF 		bl	__aeabi_dadd
 420              	.LVL29:
 421              		.loc 1 292 25 view .LVU111
 422 0038 5246     		mov	r2, r10
 423 003a 5B46     		mov	r3, fp
 424 003c FFF7FEFF 		bl	__aeabi_dmul
 425              	.LVL30:
 426              		.loc 1 292 14 view .LVU112
 427 0040 DDE90423 		ldrd	r2, [sp, #16]
 428 0044 FFF7FEFF 		bl	__aeabi_dadd
 429              	.LVL31:
 430 0048 8246     		mov	r10, r0
 431              	.LVL32:
 432              		.loc 1 292 14 view .LVU113
 433 004a 8B46     		mov	fp, r1
 434              	.LVL33:
 293:Core/Src/main.c ****        			xi = temp + x0;
 435              		.loc 1 293 11 is_stmt 1 view .LVU114
 436              		.loc 1 293 14 is_stmt 0 view .LVU115
 437 004c 4246     		mov	r2, r8
 438 004e 4B46     		mov	r3, r9
 439 0050 DDE90201 		ldrd	r0, [sp, #8]
 440 0054 FFF7FEFF 		bl	__aeabi_dadd
 441              	.LVL34:
 442 0058 0446     		mov	r4, r0
 443              	.LVL35:
 444              		.loc 1 293 14 view .LVU116
 445 005a 0D46     		mov	r5, r1
 446              	.LVL36:
 294:Core/Src/main.c ****        			iterations++;
 447              		.loc 1 294 11 is_stmt 1 view .LVU117
 448              		.loc 1 294 21 is_stmt 0 view .LVU118
 449 005c 0136     		adds	r6, r6, #1
 450              	.LVL37:
 451              	.L20:
 290:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 452              		.loc 1 290 47 is_stmt 1 view .LVU119
 453 005e BE42     		cmp	r6, r7
 454 0060 1BDA     		bge	.L21
 290:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 455              		.loc 1 290 55 is_stmt 0 discriminator 1 view .LVU120
 456 0062 2246     		mov	r2, r4
 457 0064 2B46     		mov	r3, r5
 458 0066 2046     		mov	r0, r4
 459 0068 2946     		mov	r1, r5
 460 006a FFF7FEFF 		bl	__aeabi_dmul
 461              	.LVL38:
 462 006e CDE90001 		strd	r0, [sp]
 290:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 463              		.loc 1 290 65 discriminator 1 view .LVU121
 464 0072 5246     		mov	r2, r10
 465 0074 5B46     		mov	r3, fp
 466 0076 5046     		mov	r0, r10
 467 0078 5946     		mov	r1, fp
 468 007a FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 15


 469              	.LVL39:
 470 007e 8046     		mov	r8, r0
 471 0080 8946     		mov	r9, r1
 290:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 472              		.loc 1 290 60 discriminator 1 view .LVU122
 473 0082 0246     		mov	r2, r0
 474 0084 0B46     		mov	r3, r1
 475 0086 DDE90001 		ldrd	r0, [sp]
 476 008a FFF7FEFF 		bl	__aeabi_dadd
 477              	.LVL40:
 290:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 478              		.loc 1 290 47 discriminator 1 view .LVU123
 479 008e 0022     		movs	r2, #0
 480 0090 2D4B     		ldr	r3, .L29
 481 0092 FFF7FEFF 		bl	__aeabi_dcmplt
 482              	.LVL41:
 483 0096 0028     		cmp	r0, #0
 484 0098 C0D1     		bne	.L22
 485              	.L21:
 295:Core/Src/main.c ****        		}
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****        		mandelbrot_sum +=iterations;
 486              		.loc 1 297 10 is_stmt 1 view .LVU124
 487              		.loc 1 297 25 is_stmt 0 view .LVU125
 488 009a 0A9B     		ldr	r3, [sp, #40]
 489 009c F218     		adds	r2, r6, r3
 490 009e 0A92     		str	r2, [sp, #40]
 491              	.LVL42:
 492              		.loc 1 297 25 view .LVU126
 493 00a0 099B     		ldr	r3, [sp, #36]
 494 00a2 43EBE673 		adc	r3, r3, r6, asr #31
 495 00a6 0993     		str	r3, [sp, #36]
 496              	.LVL43:
 281:Core/Src/main.c ****     		x0 = ((x / (double)width) * 3.5) - 2.5;
 497              		.loc 1 281 34 is_stmt 1 discriminator 2 view .LVU127
 498 00a8 079B     		ldr	r3, [sp, #28]
 499              	.LVL44:
 281:Core/Src/main.c ****     		x0 = ((x / (double)width) * 3.5) - 2.5;
 500              		.loc 1 281 34 is_stmt 0 discriminator 2 view .LVU128
 501 00aa 0133     		adds	r3, r3, #1
 502 00ac 0793     		str	r3, [sp, #28]
 503              	.LVL45:
 504              	.L24:
 281:Core/Src/main.c ****     		x0 = ((x / (double)width) * 3.5) - 2.5;
 505              		.loc 1 281 24 is_stmt 1 discriminator 1 view .LVU129
 506 00ae 079B     		ldr	r3, [sp, #28]
 507 00b0 089A     		ldr	r2, [sp, #32]
 508 00b2 9342     		cmp	r3, r2
 509 00b4 34DA     		bge	.L27
 282:Core/Src/main.c ****        		y0 = ((y / (double)height) * 2.0) - 1.0;
 510              		.loc 1 282 7 view .LVU130
 282:Core/Src/main.c ****        		y0 = ((y / (double)height) * 2.0) - 1.0;
 511              		.loc 1 282 18 is_stmt 0 view .LVU131
 512 00b6 0898     		ldr	r0, [sp, #32]
 513 00b8 FFF7FEFF 		bl	__aeabi_i2d
 514              	.LVL46:
 515 00bc 0446     		mov	r4, r0
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 16


 516 00be 0D46     		mov	r5, r1
 282:Core/Src/main.c ****        		y0 = ((y / (double)height) * 2.0) - 1.0;
 517              		.loc 1 282 16 view .LVU132
 518 00c0 0798     		ldr	r0, [sp, #28]
 519 00c2 FFF7FEFF 		bl	__aeabi_i2d
 520              	.LVL47:
 521 00c6 2246     		mov	r2, r4
 522 00c8 2B46     		mov	r3, r5
 523 00ca FFF7FEFF 		bl	__aeabi_ddiv
 524              	.LVL48:
 282:Core/Src/main.c ****        		y0 = ((y / (double)height) * 2.0) - 1.0;
 525              		.loc 1 282 33 view .LVU133
 526 00ce 0022     		movs	r2, #0
 527 00d0 1E4B     		ldr	r3, .L29+4
 528 00d2 FFF7FEFF 		bl	__aeabi_dmul
 529              	.LVL49:
 282:Core/Src/main.c ****        		y0 = ((y / (double)height) * 2.0) - 1.0;
 530              		.loc 1 282 10 view .LVU134
 531 00d6 0022     		movs	r2, #0
 532 00d8 1D4B     		ldr	r3, .L29+8
 533 00da FFF7FEFF 		bl	__aeabi_dsub
 534              	.LVL50:
 535 00de CDE90201 		strd	r0, [sp, #8]
 536              	.LVL51:
 283:Core/Src/main.c **** 
 537              		.loc 1 283 10 is_stmt 1 view .LVU135
 283:Core/Src/main.c **** 
 538              		.loc 1 283 21 is_stmt 0 view .LVU136
 539 00e2 0C98     		ldr	r0, [sp, #48]
 540              	.LVL52:
 283:Core/Src/main.c **** 
 541              		.loc 1 283 21 view .LVU137
 542 00e4 FFF7FEFF 		bl	__aeabi_i2d
 543              	.LVL53:
 544 00e8 0446     		mov	r4, r0
 545 00ea 0D46     		mov	r5, r1
 283:Core/Src/main.c **** 
 546              		.loc 1 283 19 view .LVU138
 547 00ec 0B98     		ldr	r0, [sp, #44]
 548 00ee FFF7FEFF 		bl	__aeabi_i2d
 549              	.LVL54:
 550 00f2 2246     		mov	r2, r4
 551 00f4 2B46     		mov	r3, r5
 552 00f6 FFF7FEFF 		bl	__aeabi_ddiv
 553              	.LVL55:
 554 00fa 0246     		mov	r2, r0
 555 00fc 0B46     		mov	r3, r1
 283:Core/Src/main.c **** 
 556              		.loc 1 283 37 view .LVU139
 557 00fe FFF7FEFF 		bl	__aeabi_dadd
 558              	.LVL56:
 283:Core/Src/main.c **** 
 559              		.loc 1 283 13 view .LVU140
 560 0102 0022     		movs	r2, #0
 561 0104 134B     		ldr	r3, .L29+12
 562 0106 FFF7FEFF 		bl	__aeabi_dsub
 563              	.LVL57:
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 17


 564 010a CDE90401 		strd	r0, [sp, #16]
 565              	.LVL58:
 285:Core/Src/main.c ****        		yi = 0.0;
 566              		.loc 1 285 10 is_stmt 1 view .LVU141
 286:Core/Src/main.c **** 
 567              		.loc 1 286 10 view .LVU142
 288:Core/Src/main.c **** 
 568              		.loc 1 288 10 view .LVU143
 290:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 569              		.loc 1 290 10 view .LVU144
 288:Core/Src/main.c **** 
 570              		.loc 1 288 21 is_stmt 0 view .LVU145
 571 010e 0026     		movs	r6, #0
 286:Core/Src/main.c **** 
 572              		.loc 1 286 13 view .LVU146
 573 0110 4FF0000A 		mov	r10, #0
 574 0114 4FF0000B 		mov	fp, #0
 285:Core/Src/main.c ****        		yi = 0.0;
 575              		.loc 1 285 13 view .LVU147
 576 0118 5446     		mov	r4, r10
 577 011a 5D46     		mov	r5, fp
 578 011c 0D9F     		ldr	r7, [sp, #52]
 290:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 579              		.loc 1 290 16 view .LVU148
 580 011e 9EE7     		b	.L20
 581              	.LVL59:
 582              	.L27:
 290:Core/Src/main.c ****        			temp = (xi * xi) - (yi * yi);
 583              		.loc 1 290 16 view .LVU149
 584              	.LBE12:
 280:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 585              		.loc 1 280 34 discriminator 2 view .LVU150
 586 0120 DDF82CB0 		ldr	fp, [sp, #44]
 280:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 587              		.loc 1 280 34 is_stmt 1 discriminator 2 view .LVU151
 588 0124 0BF1010B 		add	fp, fp, #1
 589              	.LVL60:
 590              	.L19:
 280:Core/Src/main.c ****     	for (int x = 0; x < width; x++){
 591              		.loc 1 280 23 discriminator 1 view .LVU152
 592 0128 0C9B     		ldr	r3, [sp, #48]
 593 012a 9B45     		cmp	fp, r3
 594 012c 04DA     		bge	.L28
 595              	.LBB13:
 281:Core/Src/main.c ****     		x0 = ((x / (double)width) * 3.5) - 2.5;
 596              		.loc 1 281 15 is_stmt 0 view .LVU153
 597 012e 0023     		movs	r3, #0
 598 0130 0793     		str	r3, [sp, #28]
 599 0132 CDF82CB0 		str	fp, [sp, #44]
 600 0136 BAE7     		b	.L24
 601              	.L28:
 281:Core/Src/main.c ****     		x0 = ((x / (double)width) * 3.5) - 2.5;
 602              		.loc 1 281 15 view .LVU154
 603              	.LBE13:
 604              	.LBE14:
 298:Core/Src/main.c ****        }
 299:Core/Src/main.c ****     }
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 18


 300:Core/Src/main.c ****     return mandelbrot_sum;
 301:Core/Src/main.c **** }
 605              		.loc 1 301 1 view .LVU155
 606 0138 DDF828A0 		ldr	r10, [sp, #40]
 300:Core/Src/main.c **** }
 607              		.loc 1 300 5 is_stmt 1 view .LVU156
 608              		.loc 1 301 1 is_stmt 0 view .LVU157
 609 013c 5046     		mov	r0, r10
 610 013e 0999     		ldr	r1, [sp, #36]
 611 0140 0FB0     		add	sp, sp, #60
 612              	.LCFI8:
 613              		.cfi_def_cfa_offset 36
 614              		@ sp needed
 615 0142 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 616              	.LVL61:
 617              	.L30:
 618              		.loc 1 301 1 view .LVU158
 619 0146 00BF     		.align	2
 620              	.L29:
 621 0148 00001040 		.word	1074790400
 622 014c 00000C40 		.word	1074528256
 623 0150 00000440 		.word	1074003968
 624 0154 0000F03F 		.word	1072693248
 625              		.cfi_endproc
 626              	.LFE138:
 628              		.section	.text.Error_Handler,"ax",%progbits
 629              		.align	1
 630              		.global	Error_Handler
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
 635              	Error_Handler:
 636              	.LFB139:
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** /* USER CODE END 4 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** /**
 306:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 307:Core/Src/main.c ****   * @retval None
 308:Core/Src/main.c ****   */
 309:Core/Src/main.c **** void Error_Handler(void)
 310:Core/Src/main.c **** {
 637              		.loc 1 310 1 is_stmt 1 view -0
 638              		.cfi_startproc
 639              		@ Volatile: function does not return.
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              		@ link register save eliminated.
 311:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 312:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 313:Core/Src/main.c ****   __disable_irq();
 643              		.loc 1 313 3 view .LVU160
 644              	.LBB15:
 645              	.LBI15:
 646              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 19


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 20


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 21


 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 22


 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 23


 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 24


 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 25


 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 26


 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 27


 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 28


 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 29


 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 30


 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 31


 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 32


 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 33


 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 34


 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 35


 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 647              		.loc 2 960 27 view .LVU161
 648              	.LBB16:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 649              		.loc 2 962 3 view .LVU162
 650              		.syntax unified
 651              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 652 0000 72B6     		cpsid i
 653              	@ 0 "" 2
 654              		.thumb
 655              		.syntax unified
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 36


 656              	.L32:
 657              	.LBE16:
 658              	.LBE15:
 314:Core/Src/main.c ****   while (1)
 659              		.loc 1 314 3 view .LVU163
 315:Core/Src/main.c ****   {
 316:Core/Src/main.c ****   }
 660              		.loc 1 316 3 view .LVU164
 314:Core/Src/main.c ****   while (1)
 661              		.loc 1 314 9 view .LVU165
 662 0002 FEE7     		b	.L32
 663              		.cfi_endproc
 664              	.LFE139:
 666              		.section	.text.SystemClock_Config,"ax",%progbits
 667              		.align	1
 668              		.global	SystemClock_Config
 669              		.syntax unified
 670              		.thumb
 671              		.thumb_func
 673              	SystemClock_Config:
 674              	.LFB135:
 156:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 675              		.loc 1 156 1 view -0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 80
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679 0000 00B5     		push	{lr}
 680              	.LCFI9:
 681              		.cfi_def_cfa_offset 4
 682              		.cfi_offset 14, -4
 683 0002 95B0     		sub	sp, sp, #84
 684              	.LCFI10:
 685              		.cfi_def_cfa_offset 88
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 686              		.loc 1 157 3 view .LVU167
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 687              		.loc 1 157 22 is_stmt 0 view .LVU168
 688 0004 3422     		movs	r2, #52
 689 0006 0021     		movs	r1, #0
 690 0008 07A8     		add	r0, sp, #28
 691 000a FFF7FEFF 		bl	memset
 692              	.LVL62:
 158:Core/Src/main.c **** 
 693              		.loc 1 158 3 is_stmt 1 view .LVU169
 158:Core/Src/main.c **** 
 694              		.loc 1 158 22 is_stmt 0 view .LVU170
 695 000e 0023     		movs	r3, #0
 696 0010 0293     		str	r3, [sp, #8]
 697 0012 0393     		str	r3, [sp, #12]
 698 0014 0493     		str	r3, [sp, #16]
 699 0016 0593     		str	r3, [sp, #20]
 700 0018 0693     		str	r3, [sp, #24]
 162:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 701              		.loc 1 162 3 is_stmt 1 view .LVU171
 702              	.LBB17:
 162:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 703              		.loc 1 162 3 view .LVU172
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 37


 704 001a 0093     		str	r3, [sp]
 162:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 705              		.loc 1 162 3 view .LVU173
 706 001c 214A     		ldr	r2, .L39
 707 001e 116C     		ldr	r1, [r2, #64]
 708 0020 41F08051 		orr	r1, r1, #268435456
 709 0024 1164     		str	r1, [r2, #64]
 162:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 710              		.loc 1 162 3 view .LVU174
 711 0026 126C     		ldr	r2, [r2, #64]
 712 0028 02F08052 		and	r2, r2, #268435456
 713 002c 0092     		str	r2, [sp]
 162:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 714              		.loc 1 162 3 view .LVU175
 715 002e 009A     		ldr	r2, [sp]
 716              	.LBE17:
 162:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 717              		.loc 1 162 3 view .LVU176
 163:Core/Src/main.c **** 
 718              		.loc 1 163 3 view .LVU177
 719              	.LBB18:
 163:Core/Src/main.c **** 
 720              		.loc 1 163 3 view .LVU178
 721 0030 0193     		str	r3, [sp, #4]
 163:Core/Src/main.c **** 
 722              		.loc 1 163 3 view .LVU179
 723 0032 1D4A     		ldr	r2, .L39+4
 724 0034 1368     		ldr	r3, [r2]
 725 0036 23F44043 		bic	r3, r3, #49152
 726 003a 43F48043 		orr	r3, r3, #16384
 727 003e 1360     		str	r3, [r2]
 163:Core/Src/main.c **** 
 728              		.loc 1 163 3 view .LVU180
 729 0040 1368     		ldr	r3, [r2]
 730 0042 03F44043 		and	r3, r3, #49152
 731 0046 0193     		str	r3, [sp, #4]
 163:Core/Src/main.c **** 
 732              		.loc 1 163 3 view .LVU181
 733 0048 019B     		ldr	r3, [sp, #4]
 734              	.LBE18:
 163:Core/Src/main.c **** 
 735              		.loc 1 163 3 view .LVU182
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 736              		.loc 1 168 3 view .LVU183
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 737              		.loc 1 168 36 is_stmt 0 view .LVU184
 738 004a 0123     		movs	r3, #1
 739 004c 0793     		str	r3, [sp, #28]
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 740              		.loc 1 169 3 is_stmt 1 view .LVU185
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 741              		.loc 1 169 30 is_stmt 0 view .LVU186
 742 004e 4FF48033 		mov	r3, #65536
 743 0052 0893     		str	r3, [sp, #32]
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 744              		.loc 1 170 3 is_stmt 1 view .LVU187
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 38


 745              		.loc 1 170 34 is_stmt 0 view .LVU188
 746 0054 0223     		movs	r3, #2
 747 0056 0D93     		str	r3, [sp, #52]
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 748              		.loc 1 171 3 is_stmt 1 view .LVU189
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 749              		.loc 1 171 35 is_stmt 0 view .LVU190
 750 0058 4FF48002 		mov	r2, #4194304
 751 005c 0E92     		str	r2, [sp, #56]
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 752              		.loc 1 172 3 is_stmt 1 view .LVU191
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 753              		.loc 1 172 30 is_stmt 0 view .LVU192
 754 005e 0F22     		movs	r2, #15
 755 0060 0F92     		str	r2, [sp, #60]
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 756              		.loc 1 173 3 is_stmt 1 view .LVU193
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 757              		.loc 1 173 30 is_stmt 0 view .LVU194
 758 0062 9022     		movs	r2, #144
 759 0064 1092     		str	r2, [sp, #64]
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 760              		.loc 1 174 3 is_stmt 1 view .LVU195
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 761              		.loc 1 174 30 is_stmt 0 view .LVU196
 762 0066 1193     		str	r3, [sp, #68]
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 763              		.loc 1 175 3 is_stmt 1 view .LVU197
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 764              		.loc 1 175 30 is_stmt 0 view .LVU198
 765 0068 1293     		str	r3, [sp, #72]
 176:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 766              		.loc 1 176 3 is_stmt 1 view .LVU199
 176:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 767              		.loc 1 176 30 is_stmt 0 view .LVU200
 768 006a 1393     		str	r3, [sp, #76]
 177:Core/Src/main.c ****   {
 769              		.loc 1 177 3 is_stmt 1 view .LVU201
 177:Core/Src/main.c ****   {
 770              		.loc 1 177 7 is_stmt 0 view .LVU202
 771 006c 07A8     		add	r0, sp, #28
 772 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 773              	.LVL63:
 177:Core/Src/main.c ****   {
 774              		.loc 1 177 6 discriminator 1 view .LVU203
 775 0072 98B9     		cbnz	r0, .L37
 184:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 776              		.loc 1 184 3 is_stmt 1 view .LVU204
 184:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 777              		.loc 1 184 31 is_stmt 0 view .LVU205
 778 0074 0F23     		movs	r3, #15
 779 0076 0293     		str	r3, [sp, #8]
 186:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 780              		.loc 1 186 3 is_stmt 1 view .LVU206
 186:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 781              		.loc 1 186 34 is_stmt 0 view .LVU207
 782 0078 0223     		movs	r3, #2
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 39


 783 007a 0393     		str	r3, [sp, #12]
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 784              		.loc 1 187 3 is_stmt 1 view .LVU208
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 785              		.loc 1 187 35 is_stmt 0 view .LVU209
 786 007c 0023     		movs	r3, #0
 787 007e 0493     		str	r3, [sp, #16]
 188:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 788              		.loc 1 188 3 is_stmt 1 view .LVU210
 188:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 789              		.loc 1 188 36 is_stmt 0 view .LVU211
 790 0080 4FF4A053 		mov	r3, #5120
 791 0084 0593     		str	r3, [sp, #20]
 189:Core/Src/main.c **** 
 792              		.loc 1 189 3 is_stmt 1 view .LVU212
 189:Core/Src/main.c **** 
 793              		.loc 1 189 36 is_stmt 0 view .LVU213
 794 0086 4FF48053 		mov	r3, #4096
 795 008a 0693     		str	r3, [sp, #24]
 191:Core/Src/main.c ****   {
 796              		.loc 1 191 3 is_stmt 1 view .LVU214
 191:Core/Src/main.c ****   {
 797              		.loc 1 191 7 is_stmt 0 view .LVU215
 798 008c 0321     		movs	r1, #3
 799 008e 02A8     		add	r0, sp, #8
 800 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 801              	.LVL64:
 191:Core/Src/main.c ****   {
 802              		.loc 1 191 6 discriminator 1 view .LVU216
 803 0094 20B9     		cbnz	r0, .L38
 195:Core/Src/main.c **** 
 804              		.loc 1 195 1 view .LVU217
 805 0096 15B0     		add	sp, sp, #84
 806              	.LCFI11:
 807              		.cfi_remember_state
 808              		.cfi_def_cfa_offset 4
 809              		@ sp needed
 810 0098 5DF804FB 		ldr	pc, [sp], #4
 811              	.L37:
 812              	.LCFI12:
 813              		.cfi_restore_state
 179:Core/Src/main.c ****   }
 814              		.loc 1 179 5 is_stmt 1 view .LVU218
 815 009c FFF7FEFF 		bl	Error_Handler
 816              	.LVL65:
 817              	.L38:
 193:Core/Src/main.c ****   }
 818              		.loc 1 193 5 view .LVU219
 819 00a0 FFF7FEFF 		bl	Error_Handler
 820              	.LVL66:
 821              	.L40:
 822              		.align	2
 823              	.L39:
 824 00a4 00380240 		.word	1073887232
 825 00a8 00700040 		.word	1073770496
 826              		.cfi_endproc
 827              	.LFE135:
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 40


 829              		.section	.text.main,"ax",%progbits
 830              		.align	1
 831              		.global	main
 832              		.syntax unified
 833              		.thumb
 834              		.thumb_func
 836              	main:
 837              	.LFB134:
  77:Core/Src/main.c **** 
 838              		.loc 1 77 1 view -0
 839              		.cfi_startproc
 840              		@ Volatile: function does not return.
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843 0000 08B5     		push	{r3, lr}
 844              	.LCFI13:
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 3, -8
 847              		.cfi_offset 14, -4
  86:Core/Src/main.c **** 
 848              		.loc 1 86 3 view .LVU221
 849 0002 FFF7FEFF 		bl	HAL_Init
 850              	.LVL67:
  93:Core/Src/main.c **** 
 851              		.loc 1 93 3 view .LVU222
 852 0006 FFF7FEFF 		bl	SystemClock_Config
 853              	.LVL68:
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 854              		.loc 1 100 3 view .LVU223
 855 000a FFF7FEFF 		bl	MX_GPIO_Init
 856              	.LVL69:
 857              	.L42:
 107:Core/Src/main.c ****   {
 858              		.loc 1 107 3 view .LVU224
 113:Core/Src/main.c **** 
 859              		.loc 1 113 2 view .LVU225
 860 000e 184C     		ldr	r4, .L44
 861 0010 0122     		movs	r2, #1
 862 0012 1146     		mov	r1, r2
 863 0014 2046     		mov	r0, r4
 864 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 865              	.LVL70:
 116:Core/Src/main.c **** 
 866              		.loc 1 116 2 view .LVU226
 116:Core/Src/main.c **** 
 867              		.loc 1 116 15 is_stmt 0 view .LVU227
 868 001a FFF7FEFF 		bl	HAL_GetTick
 869              	.LVL71:
 116:Core/Src/main.c **** 
 870              		.loc 1 116 13 discriminator 1 view .LVU228
 871 001e 154D     		ldr	r5, .L44+4
 872 0020 2860     		str	r0, [r5]
 119:Core/Src/main.c **** 
 873              		.loc 1 119 2 is_stmt 1 view .LVU229
 119:Core/Src/main.c **** 
 874              		.loc 1 119 13 is_stmt 0 view .LVU230
 875 0022 6422     		movs	r2, #100
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 41


 876 0024 144B     		ldr	r3, .L44+8
 877 0026 1968     		ldr	r1, [r3]
 878 0028 144B     		ldr	r3, .L44+12
 879 002a 1868     		ldr	r0, [r3]
 880 002c FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 881              	.LVL72:
 119:Core/Src/main.c **** 
 882              		.loc 1 119 11 discriminator 1 view .LVU231
 883 0030 134B     		ldr	r3, .L44+16
 884 0032 C3E90001 		strd	r0, [r3]
 122:Core/Src/main.c **** 
 885              		.loc 1 122 2 is_stmt 1 view .LVU232
 122:Core/Src/main.c **** 
 886              		.loc 1 122 13 is_stmt 0 view .LVU233
 887 0036 FFF7FEFF 		bl	HAL_GetTick
 888              	.LVL73:
 122:Core/Src/main.c **** 
 889              		.loc 1 122 11 discriminator 1 view .LVU234
 890 003a 124B     		ldr	r3, .L44+20
 891 003c 1860     		str	r0, [r3]
 127:Core/Src/main.c **** 
 892              		.loc 1 127 2 is_stmt 1 view .LVU235
 127:Core/Src/main.c **** 
 893              		.loc 1 127 28 is_stmt 0 view .LVU236
 894 003e 2B68     		ldr	r3, [r5]
 895 0040 C01A     		subs	r0, r0, r3
 127:Core/Src/main.c **** 
 896              		.loc 1 127 17 view .LVU237
 897 0042 114B     		ldr	r3, .L44+24
 898 0044 1860     		str	r0, [r3]
 132:Core/Src/main.c **** 
 899              		.loc 1 132 2 is_stmt 1 view .LVU238
 900 0046 0122     		movs	r2, #1
 901 0048 0221     		movs	r1, #2
 902 004a 2046     		mov	r0, r4
 903 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 904              	.LVL74:
 137:Core/Src/main.c **** 
 905              		.loc 1 137 2 view .LVU239
 906 0050 4FF4FA60 		mov	r0, #2000
 907 0054 FFF7FEFF 		bl	HAL_Delay
 908              	.LVL75:
 142:Core/Src/main.c **** 
 909              		.loc 1 142 2 view .LVU240
 910 0058 0022     		movs	r2, #0
 911 005a 0121     		movs	r1, #1
 912 005c 2046     		mov	r0, r4
 913 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 914              	.LVL76:
 144:Core/Src/main.c **** 
 915              		.loc 1 144 2 discriminator 1 view .LVU241
 916 0062 0022     		movs	r2, #0
 917 0064 0221     		movs	r1, #2
 918 0066 2046     		mov	r0, r4
 919 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 920              	.LVL77:
 107:Core/Src/main.c ****   {
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 42


 921              		.loc 1 107 9 view .LVU242
 922 006c CFE7     		b	.L42
 923              	.L45:
 924 006e 00BF     		.align	2
 925              	.L44:
 926 0070 00040240 		.word	1073873920
 927 0074 00000000 		.word	start_time
 928 0078 00000000 		.word	height
 929 007c 00000000 		.word	width
 930 0080 00000000 		.word	checksum
 931 0084 00000000 		.word	end_time
 932 0088 00000000 		.word	execution_time
 933              		.cfi_endproc
 934              	.LFE134:
 936              		.global	height
 937              		.section	.data.height,"aw"
 938              		.align	2
 941              	height:
 942 0000 80000000 		.word	128
 943              		.global	width
 944              		.section	.data.width,"aw"
 945              		.align	2
 948              	width:
 949 0000 80000000 		.word	128
 950              		.global	checksum
 951              		.section	.bss.checksum,"aw",%nobits
 952              		.align	3
 955              	checksum:
 956 0000 00000000 		.space	8
 956      00000000 
 957              		.global	execution_time
 958              		.section	.bss.execution_time,"aw",%nobits
 959              		.align	2
 962              	execution_time:
 963 0000 00000000 		.space	4
 964              		.global	end_time
 965              		.section	.bss.end_time,"aw",%nobits
 966              		.align	2
 969              	end_time:
 970 0000 00000000 		.space	4
 971              		.global	start_time
 972              		.section	.bss.start_time,"aw",%nobits
 973              		.align	2
 976              	start_time:
 977 0000 00000000 		.space	4
 978              		.text
 979              	.Letext0:
 980              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 981              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 982              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 983              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 984              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 985              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 986              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 987              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 988              		.file 11 "<built-in>"
ARM GAS  C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:133    .text.MX_GPIO_Init:00000074 $d
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:144    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:150    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:341    .text.calculate_mandelbrot_fixed_point_arithmetic:000000c4 $d
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:349    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:355    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:621    .text.calculate_mandelbrot_double:00000148 $d
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:629    .text.Error_Handler:00000000 $t
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:635    .text.Error_Handler:00000000 Error_Handler
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:667    .text.SystemClock_Config:00000000 $t
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:673    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:824    .text.SystemClock_Config:000000a4 $d
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:830    .text.main:00000000 $t
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:836    .text.main:00000000 main
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:926    .text.main:00000070 $d
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:976    .bss.start_time:00000000 start_time
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:941    .data.height:00000000 height
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:948    .data.width:00000000 width
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:955    .bss.checksum:00000000 checksum
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:969    .bss.end_time:00000000 end_time
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:962    .bss.execution_time:00000000 execution_time
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:938    .data.height:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:945    .data.width:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:952    .bss.checksum:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:959    .bss.execution_time:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:966    .bss.end_time:00000000 $d
C:\Users\admin\AppData\Local\Temp\ccVc6rSZ.s:973    .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_i2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_dsub
__aeabi_d2iz
__aeabi_dadd
__aeabi_dcmplt
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
